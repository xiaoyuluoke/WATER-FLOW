; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\obj\stm32f10x_it.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=..\obj\stm32f10x_it.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\main -I..\component\delay -I..\component\LED -I..\component\sys -I..\component\usart -I..\STM32_lib\CORE -I..\STM32_lib\inc -I..\STM32_lib\user_layer -I..\component\KEY -I..\component\lcd_driver -I..\component\gui -I..\component\UI -I..\component\RTC -I..\component\FreeRTOS\Source\include -I..\component\FreeRTOS\Source\portable\RVDS\ARM_CM3 -I..\component\FreeRTOS -I..\component\FreeRTOS\Source\portable\MemMang -I..\component\FreeRTOS\Source\CMSIS_RTOS -I..\component\STMFLASH -I..\component\PWM_in -IE:\1.项目\1.水流量计\WATER-FLOW\water_FLOW\project\RTE -ID:\1.Software_\5.Keil5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\1.Software_\5.Keil5\ARM\CMSIS\Include -D__UVISION_VERSION=514 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -Dwater_flow --omf_browse=..\obj\stm32f10x_it.crf ..\STM32_lib\user_layer\stm32f10x_it.c]
                          THUMB

                          AREA ||i.BusFault_Handler||, CODE, READONLY, ALIGN=1

                  BusFault_Handler PROC
;;;50      
;;;51     void BusFault_Handler(void)
000000  bf00              NOP      
                  |L1.2|
;;;52     {
;;;53       /* Go to infinite loop when Bus Fault exception occurs */
;;;54       while (1)
000002  e7fe              B        |L1.2|
;;;55       {
;;;56       }
;;;57     }
;;;58      
                          ENDP


                          AREA ||i.DebugMon_Handler||, CODE, READONLY, ALIGN=1

                  DebugMon_Handler PROC
;;;70      
;;;71     void DebugMon_Handler(void)
000000  4770              BX       lr
;;;72     {
;;;73     }
;;;74      
                          ENDP


                          AREA ||i.HardFault_Handler||, CODE, READONLY, ALIGN=1

                  HardFault_Handler PROC
;;;33      
;;;34     void HardFault_Handler(void)
000000  bf00              NOP      
                  |L3.2|
;;;35     {
;;;36       /* Go to infinite loop when Hard Fault exception occurs */
;;;37       while (1)
000002  e7fe              B        |L3.2|
;;;38       {
;;;39       }
;;;40     }
;;;41      
                          ENDP


                          AREA ||i.MemManage_Handler||, CODE, READONLY, ALIGN=1

                  MemManage_Handler PROC
;;;41      
;;;42     void MemManage_Handler(void)
000000  bf00              NOP      
                  |L4.2|
;;;43     {
;;;44       /* Go to infinite loop when Memory Manage exception occurs */
;;;45       while (1)
000002  e7fe              B        |L4.2|
;;;46       {
;;;47       }
;;;48     }
;;;49     
                          ENDP


                          AREA ||i.NMI_Handler||, CODE, READONLY, ALIGN=1

                  NMI_Handler PROC
;;;29      
;;;30     void NMI_Handler(void)
000000  4770              BX       lr
;;;31     {
;;;32     }
;;;33      
                          ENDP


                          AREA ||i.SysTick_Handler||, CODE, READONLY, ALIGN=1

                  SysTick_Handler PROC
;;;78     // 
;;;79     void SysTick_Handler(void)
000000  b510              PUSH     {r4,lr}
;;;80     {
;;;81     
;;;82       if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED)
000002  f7fffffe          BL       xTaskGetSchedulerState
000006  2801              CMP      r0,#1
000008  d001              BEQ      |L6.14|
;;;83       {
;;;84         xPortSysTickHandler();
00000a  f7fffffe          BL       xPortSysTickHandler
                  |L6.14|
;;;85     	}
;;;86     }
00000e  bd10              POP      {r4,pc}
;;;87     
                          ENDP


                          AREA ||i.UsageFault_Handler||, CODE, READONLY, ALIGN=1

                  UsageFault_Handler PROC
;;;58      
;;;59     void UsageFault_Handler(void)
000000  bf00              NOP      
                  |L7.2|
;;;60     {
;;;61       /* Go to infinite loop when Usage Fault exception occurs */
;;;62       while (1)
000002  e7fe              B        |L7.2|
;;;63       {
;;;64       }
;;;65     }
;;;66      
                          ENDP

