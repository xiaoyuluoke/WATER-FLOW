; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\obj\ui.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=..\obj\ui.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\main -I..\component\delay -I..\component\LED -I..\component\sys -I..\component\usart -I..\STM32_lib\CORE -I..\STM32_lib\inc -I..\STM32_lib\user_layer -I..\component\KEY -I..\component\lcd_driver -I..\component\gui -I..\component\UI -I..\component\RTC -I..\component\FreeRTOS\Source\include -I..\component\FreeRTOS\Source\portable\RVDS\ARM_CM3 -I..\component\FreeRTOS -I..\component\FreeRTOS\Source\portable\MemMang -I..\component\FreeRTOS\Source\CMSIS_RTOS -I..\component\STMFLASH -I..\component\PWM_in -IE:\1.项目\1.水流量计\water_FLOW\project\RTE -ID:\1.Software_\5.Keil5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\1.Software_\5.Keil5\ARM\CMSIS\Include -D__UVISION_VERSION=514 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -Dwater_flow --omf_browse=..\obj\ui.crf ..\component\UI\UI.c]
                          THUMB

                          AREA ||i.Show_plan||, CODE, READONLY, ALIGN=2

                  Show_plan PROC
;;;210    /*********************************************************/
;;;211    void Show_plan(void)
000000  b530              PUSH     {r4,r5,lr}
;;;212    {
000002  b09d              SUB      sp,sp,#0x74
;;;213    	char str1[50];
;;;214      char str3[50];
;;;215    	u8 sx,sy;
;;;216    	 
;;;217    	sprintf(str1,"定量");
000004  a137              ADR      r1,|L1.228|
000006  a810              ADD      r0,sp,#0x40
000008  f7fffffe          BL       __2sprintf
;;;218    	sx = 20;sy = 10;
00000c  2414              MOVS     r4,#0x14
00000e  250a              MOVS     r5,#0xa
;;;219    	Gui_DrawFont_GBK24(sx,sy,GREEN,BLACK,(u8 *)str1);//汉字
000010  a810              ADD      r0,sp,#0x40
000012  2300              MOVS     r3,#0
000014  f44f62fc          MOV      r2,#0x7e0
000018  4629              MOV      r1,r5
00001a  9000              STR      r0,[sp,#0]
00001c  4620              MOV      r0,r4
00001e  f7fffffe          BL       Gui_DrawFont_GBK24
;;;220    	sx += 24*2;sy = 10;
000022  3430              ADDS     r4,r4,#0x30
000024  bf00              NOP      
;;;221    	LCD_ShowChar(sx,10,':',24,0);//:
000026  2000              MOVS     r0,#0
000028  2318              MOVS     r3,#0x18
00002a  223a              MOVS     r2,#0x3a
00002c  210a              MOVS     r1,#0xa
00002e  9000              STR      r0,[sp,#0]
000030  4620              MOV      r0,r4
000032  f7fffffe          BL       LCD_ShowChar
;;;222    	sx += 24; sy = 10; 
000036  3418              ADDS     r4,r4,#0x18
000038  bf00              NOP      
;;;223    
;;;224    	LCD_ShowxNum(sx,sy,plan.power_h,2,24,128);//整数
00003a  2080              MOVS     r0,#0x80
00003c  2118              MOVS     r1,#0x18
00003e  e9cd1000          STRD     r1,r0,[sp,#0]
000042  482a              LDR      r0,|L1.236|
000044  8882              LDRH     r2,[r0,#4]  ; plan
000046  2302              MOVS     r3,#2
000048  4629              MOV      r1,r5
00004a  4620              MOV      r0,r4
00004c  f7fffffe          BL       LCD_ShowxNum
;;;225      plan_coord.sx_h = sx;plan_coord.sy_h = sy+24;
000050  4827              LDR      r0,|L1.240|
000052  8004              STRH     r4,[r0,#0]
000054  f1050018          ADD      r0,r5,#0x18
000058  4925              LDR      r1,|L1.240|
00005a  8048              STRH     r0,[r1,#2]
;;;226    	plan_coord.end_x_h = sx+12*2;plan_coord.end_y_h = sy+24;
00005c  f1040018          ADD      r0,r4,#0x18
000060  7108              STRB     r0,[r1,#4]
000062  f1050018          ADD      r0,r5,#0x18
000066  7148              STRB     r0,[r1,#5]
;;;227    	sx += 12*2;sy = 10;
000068  f1040018          ADD      r0,r4,#0x18
00006c  b2c4              UXTB     r4,r0
00006e  bf00              NOP      
;;;228    	LCD_ShowChar(sx,sy,'.',24,0);//小数点
000070  2000              MOVS     r0,#0
000072  2318              MOVS     r3,#0x18
000074  222e              MOVS     r2,#0x2e
000076  4629              MOV      r1,r5
000078  9000              STR      r0,[sp,#0]
00007a  4620              MOV      r0,r4
00007c  f7fffffe          BL       LCD_ShowChar
;;;229    	sx += 12; sy = 10;
000080  f104000c          ADD      r0,r4,#0xc
000084  b2c4              UXTB     r4,r0
000086  bf00              NOP      
;;;230    
;;;231    	LCD_ShowxNum(sx,sy,plan.power_l ,3,24,128);//小数
000088  2080              MOVS     r0,#0x80
00008a  2118              MOVS     r1,#0x18
00008c  e9cd1000          STRD     r1,r0,[sp,#0]
000090  4816              LDR      r0,|L1.236|
000092  88c2              LDRH     r2,[r0,#6]  ; plan
000094  2303              MOVS     r3,#3
000096  4629              MOV      r1,r5
000098  4620              MOV      r0,r4
00009a  f7fffffe          BL       LCD_ShowxNum
;;;232    	plan_coord.sx_l = sx;plan_coord.sy_l =sy+24;
00009e  4814              LDR      r0,|L1.240|
0000a0  8184              STRH     r4,[r0,#0xc]
0000a2  f1050018          ADD      r0,r5,#0x18
0000a6  4912              LDR      r1,|L1.240|
0000a8  81c8              STRH     r0,[r1,#0xe]
;;;233    	plan_coord.end_x_l = sx+12*3;plan_coord.end_y_l = sy+24;
0000aa  f1040024          ADD      r0,r4,#0x24
0000ae  7408              STRB     r0,[r1,#0x10]
0000b0  f1050018          ADD      r0,r5,#0x18
0000b4  7448              STRB     r0,[r1,#0x11]
;;;234    	sprintf(str3,"m3");
0000b6  a10f              ADR      r1,|L1.244|
0000b8  a803              ADD      r0,sp,#0xc
0000ba  f7fffffe          BL       __2sprintf
;;;235    	sx += 12*3;sx += 10; sy += 10;
0000be  f1040024          ADD      r0,r4,#0x24
0000c2  b2c4              UXTB     r4,r0
0000c4  f104000a          ADD      r0,r4,#0xa
0000c8  b2c4              UXTB     r4,r0
0000ca  350a              ADDS     r5,r5,#0xa
;;;236    	Gui_DrawFont_GBK24(sx,sy,GREEN,BLACK,(u8 *)str3);//m3
0000cc  a803              ADD      r0,sp,#0xc
0000ce  2300              MOVS     r3,#0
0000d0  f44f62fc          MOV      r2,#0x7e0
0000d4  4629              MOV      r1,r5
0000d6  9000              STR      r0,[sp,#0]
0000d8  4620              MOV      r0,r4
0000da  f7fffffe          BL       Gui_DrawFont_GBK24
;;;237    }
0000de  b01d              ADD      sp,sp,#0x74
0000e0  bd30              POP      {r4,r5,pc}
;;;238    /*********************************************************/
                          ENDP

0000e2  0000              DCW      0x0000
                  |L1.228|
0000e4  b6a8c1bf          DCB      182,168,193,191,0
0000e8  00      
0000e9  00                DCB      0
0000ea  00                DCB      0
0000eb  00                DCB      0
                  |L1.236|
                          DCD      plan
                  |L1.240|
                          DCD      plan_coord
                  |L1.244|
0000f4  6d3300            DCB      "m3",0
0000f7  00                DCB      0

                          AREA ||i.Show_task||, CODE, READONLY, ALIGN=2

                  Show_task PROC
;;;19     /*********************************************************/
;;;20     void Show_task(void * pvParameters)
000000  e047              B        |L2.146|
                  |L2.2|
;;;21     {
;;;22     	while(1)
;;;23     	{
;;;24     		if(use.amp < plan.amp )
000002  4824              LDR      r0,|L2.148|
000004  8840              LDRH     r0,[r0,#2]  ; use
000006  4924              LDR      r1,|L2.152|
000008  8849              LDRH     r1,[r1,#2]  ; plan
00000a  4288              CMP      r0,r1
00000c  da26              BGE      |L2.92|
;;;25     		{
;;;26     			use.power_h = (u16)flow /1000 ;
00000e  4823              LDR      r0,|L2.156|
000010  6800              LDR      r0,[r0,#0]  ; flow
000012  f7fffffe          BL       __aeabi_f2uiz
000016  b280              UXTH     r0,r0
000018  f44f717a          MOV      r1,#0x3e8
00001c  fb90f0f1          SDIV     r0,r0,r1
000020  491c              LDR      r1,|L2.148|
000022  8088              STRH     r0,[r1,#4]
;;;27     			use.power_l = (u16)flow %1000 ;
000024  481d              LDR      r0,|L2.156|
000026  6800              LDR      r0,[r0,#0]  ; flow
000028  f7fffffe          BL       __aeabi_f2uiz
00002c  b280              UXTH     r0,r0
00002e  f44f717a          MOV      r1,#0x3e8
000032  fb90f2f1          SDIV     r2,r0,r1
000036  fb010012          MLS      r0,r1,r2,r0
00003a  4916              LDR      r1,|L2.148|
00003c  80c8              STRH     r0,[r1,#6]
;;;28     			use.amp = use.power_h*1000 + use.power_l ; 
00003e  4608              MOV      r0,r1
000040  88c0              LDRH     r0,[r0,#6]  ; use
000042  8889              LDRH     r1,[r1,#4]  ; use
000044  eb010241          ADD      r2,r1,r1,LSL #1
000048  ebc211c1          RSB      r1,r2,r1,LSL #7
00004c  eb0000c1          ADD      r0,r0,r1,LSL #3
000050  4910              LDR      r1,|L2.148|
000052  8048              STRH     r0,[r1,#2]
;;;29     			Relay = 0;
000054  2000              MOVS     r0,#0
000056  4912              LDR      r1,|L2.160|
000058  6008              STR      r0,[r1,#0]
00005a  e002              B        |L2.98|
                  |L2.92|
;;;30     		}
;;;31     		else {	Relay = 1;}
00005c  2001              MOVS     r0,#1
00005e  4910              LDR      r1,|L2.160|
000060  6008              STR      r0,[r1,#0]
                  |L2.98|
;;;32     		if( tim.time_amp == timeing.time_amp)
000062  4810              LDR      r0,|L2.164|
000064  6800              LDR      r0,[r0,#0]  ; tim
000066  4910              LDR      r1,|L2.168|
000068  6809              LDR      r1,[r1,#0]  ; timeing
00006a  4288              CMP      r0,r1
00006c  d106              BNE      |L2.124|
;;;33     		{flow = 0;use.amp =0 ; Relay = 0;}
00006e  2000              MOVS     r0,#0
000070  490a              LDR      r1,|L2.156|
000072  6008              STR      r0,[r1,#0]  ; flow
000074  4907              LDR      r1,|L2.148|
000076  8048              STRH     r0,[r1,#2]
000078  4909              LDR      r1,|L2.160|
00007a  6008              STR      r0,[r1,#0]
                  |L2.124|
;;;34     		if(show_Refresh){Show_use();}
00007c  480b              LDR      r0,|L2.172|
00007e  7800              LDRB     r0,[r0,#0]  ; show_Refresh
000080  b108              CBZ      r0,|L2.134|
000082  f7fffffe          BL       Show_use
                  |L2.134|
;;;35     		time_show();
000086  f7fffffe          BL       time_show
;;;36     		vTaskDelay(850);
00008a  f2403052          MOV      r0,#0x352
00008e  f7fffffe          BL       vTaskDelay
                  |L2.146|
000092  e7b6              B        |L2.2|
;;;37     		}
;;;38     }
;;;39     /********************************************************/
                          ENDP

                  |L2.148|
                          DCD      use
                  |L2.152|
                          DCD      plan
                  |L2.156|
                          DCD      flow
                  |L2.160|
                          DCD      0x42220190
                  |L2.164|
                          DCD      tim
                  |L2.168|
                          DCD      timeing
                  |L2.172|
                          DCD      show_Refresh

                          AREA ||i.Show_time||, CODE, READONLY, ALIGN=2

                  Show_time PROC
;;;291    /*********************************************************/
;;;292    void Show_time(time_ tim)
000000  b537              PUSH     {r0-r2,r4,r5,lr}
;;;293    {
000002  b082              SUB      sp,sp,#8
;;;294    
;;;295    	u8 sx,sy;
;;;296    	sx =10;sy=120;
000004  240a              MOVS     r4,#0xa
000006  2578              MOVS     r5,#0x78
;;;297    	
;;;298    	if(tim.time_h <=24)
000008  f8bd000c          LDRH     r0,[sp,#0xc]
00000c  2818              CMP      r0,#0x18
00000e  dc08              BGT      |L3.34|
;;;299    	{
;;;300    	  show_num_32(sx,sy,GREEN,tim.time_h);
000010  f8bd300c          LDRH     r3,[sp,#0xc]
000014  f44f62fc          MOV      r2,#0x7e0
000018  4629              MOV      r1,r5
00001a  4620              MOV      r0,r4
00001c  f7fffffe          BL       show_num_32
000020  e003              B        |L3.42|
                  |L3.34|
;;;301    		
;;;302    	}
;;;303    	 else
;;;304    	 {
;;;305    	  err.type = tim_err;
000022  2000              MOVS     r0,#0
000024  493b              LDR      r1,|L3.276|
000026  7008              STRB     r0,[r1,#0]
;;;306    		err.tim_ =tim_h;
000028  7048              STRB     r0,[r1,#1]
                  |L3.42|
;;;307    #ifdef Debug_
;;;308    		printf("time set hour error\r\n");
;;;309    #endif
;;;310    	 }
;;;311    	time_coord.sx_h = sx+10;time_coord.sy_h = sy+35;
00002a  f104000a          ADD      r0,r4,#0xa
00002e  493a              LDR      r1,|L3.280|
000030  8008              STRH     r0,[r1,#0]
000032  f1050023          ADD      r0,r5,#0x23
000036  8048              STRH     r0,[r1,#2]
;;;312    	time_coord.end_x_h = sx+24*2;time_coord.end_y_h = sy+35;
000038  f1040030          ADD      r0,r4,#0x30
00003c  7108              STRB     r0,[r1,#4]
00003e  f1050023          ADD      r0,r5,#0x23
000042  7148              STRB     r0,[r1,#5]
;;;313    	sx += 24*2;sx +=12;
000044  f1040030          ADD      r0,r4,#0x30
000048  b2c4              UXTB     r4,r0
00004a  f104000c          ADD      r0,r4,#0xc
00004e  b2c4              UXTB     r4,r0
;;;314    	
;;;315    	LCD_ShowChar(sx,sy,':',24,1);//:
000050  2001              MOVS     r0,#1
000052  2318              MOVS     r3,#0x18
000054  223a              MOVS     r2,#0x3a
000056  4629              MOV      r1,r5
000058  9000              STR      r0,[sp,#0]
00005a  4620              MOV      r0,r4
00005c  f7fffffe          BL       LCD_ShowChar
;;;316    	sx +=16;
000060  f1040010          ADD      r0,r4,#0x10
000064  b2c4              UXTB     r4,r0
;;;317      if(tim.time_m <=60)
000066  f8bd000e          LDRH     r0,[sp,#0xe]
00006a  283c              CMP      r0,#0x3c
00006c  dc08              BGT      |L3.128|
;;;318    	{
;;;319    	  show_num_32(sx,sy,GREEN,tim.time_m);
00006e  f8bd300e          LDRH     r3,[sp,#0xe]
000072  f44f62fc          MOV      r2,#0x7e0
000076  4629              MOV      r1,r5
000078  4620              MOV      r0,r4
00007a  f7fffffe          BL       show_num_32
00007e  e007              B        |L3.144|
                  |L3.128|
;;;320    		
;;;321    	 }
;;;322    	 else
;;;323    	 {
;;;324    	  err.type = tim_err;
000080  2000              MOVS     r0,#0
000082  4924              LDR      r1,|L3.276|
000084  7008              STRB     r0,[r1,#0]
;;;325    		err.tim_ =tim_m;
000086  2001              MOVS     r0,#1
000088  7048              STRB     r0,[r1,#1]
;;;326    		printf("time set minute error\r\n");
00008a  a024              ADR      r0,|L3.284|
00008c  f7fffffe          BL       __2printf
                  |L3.144|
;;;327    	 }
;;;328    	time_coord.sx_m = sx+10;time_coord.sy_m =sy+35;
000090  f104000a          ADD      r0,r4,#0xa
000094  4920              LDR      r1,|L3.280|
000096  80c8              STRH     r0,[r1,#6]
000098  f1050023          ADD      r0,r5,#0x23
00009c  8108              STRH     r0,[r1,#8]
;;;329    	time_coord.end_x_m = sx+24*2;time_coord.end_y_m = sy+35;
00009e  f1040030          ADD      r0,r4,#0x30
0000a2  7288              STRB     r0,[r1,#0xa]
0000a4  f1050023          ADD      r0,r5,#0x23
0000a8  72c8              STRB     r0,[r1,#0xb]
;;;330    	sx += 24*2;
0000aa  f1040030          ADD      r0,r4,#0x30
0000ae  b2c4              UXTB     r4,r0
;;;331    	LCD_ShowChar(sx,sy,':',24,1);//:
0000b0  2001              MOVS     r0,#1
0000b2  2318              MOVS     r3,#0x18
0000b4  223a              MOVS     r2,#0x3a
0000b6  4629              MOV      r1,r5
0000b8  9000              STR      r0,[sp,#0]
0000ba  4620              MOV      r0,r4
0000bc  f7fffffe          BL       LCD_ShowChar
;;;332    	
;;;333    	sx +=16;
0000c0  f1040010          ADD      r0,r4,#0x10
0000c4  b2c4              UXTB     r4,r0
;;;334    	if(tim.time_s <=60)
0000c6  f8bd0010          LDRH     r0,[sp,#0x10]
0000ca  283c              CMP      r0,#0x3c
0000cc  dc08              BGT      |L3.224|
;;;335    	{
;;;336    	  show_num_32(sx,sy,GREEN,tim.time_s);
0000ce  f8bd3010          LDRH     r3,[sp,#0x10]
0000d2  f44f62fc          MOV      r2,#0x7e0
0000d6  4629              MOV      r1,r5
0000d8  4620              MOV      r0,r4
0000da  f7fffffe          BL       show_num_32
0000de  e007              B        |L3.240|
                  |L3.224|
;;;337    		
;;;338    	 }
;;;339    	 else
;;;340    	 {
;;;341    	  err.type = tim_err;
0000e0  2000              MOVS     r0,#0
0000e2  490c              LDR      r1,|L3.276|
0000e4  7008              STRB     r0,[r1,#0]
;;;342    		err.tim_ =tim_s;
0000e6  2002              MOVS     r0,#2
0000e8  7048              STRB     r0,[r1,#1]
;;;343    		printf("time set second error\r\n");
0000ea  a012              ADR      r0,|L3.308|
0000ec  f7fffffe          BL       __2printf
                  |L3.240|
;;;344    	 }
;;;345    	time_coord.sx_l =sx+10;time_coord.sy_l =sy+35 ;
0000f0  f104000a          ADD      r0,r4,#0xa
0000f4  4908              LDR      r1,|L3.280|
0000f6  8188              STRH     r0,[r1,#0xc]
0000f8  f1050023          ADD      r0,r5,#0x23
0000fc  81c8              STRH     r0,[r1,#0xe]
;;;346    	time_coord.end_x_l =sx+24*2;time_coord.end_y_l = sy+35;
0000fe  f1040030          ADD      r0,r4,#0x30
000102  7408              STRB     r0,[r1,#0x10]
000104  f1050023          ADD      r0,r5,#0x23
000108  7448              STRB     r0,[r1,#0x11]
;;;347    	sx += 24*2 ;
00010a  f1040030          ADD      r0,r4,#0x30
00010e  b2c4              UXTB     r4,r0
;;;348    }
000110  b005              ADD      sp,sp,#0x14
000112  bd30              POP      {r4,r5,pc}
;;;349    /*********************************************************/
                          ENDP

                  |L3.276|
                          DCD      err
                  |L3.280|
                          DCD      time_coord
                  |L3.284|
00011c  74696d65          DCB      "time set minute error\r\n",0
000120  20736574
000124  206d696e
000128  75746520
00012c  6572726f
000130  720d0a00
                  |L3.308|
000134  74696d65          DCB      "time set second error\r\n",0
000138  20736574
00013c  20736563
000140  6f6e6420
000144  6572726f
000148  720d0a00

                          AREA ||i.Show_timing||, CODE, READONLY, ALIGN=2

                  Show_timing PROC
;;;267    /*********************************************************/
;;;268    void Show_timing(void)
000000  b530              PUSH     {r4,r5,lr}
;;;269    {
000002  b08f              SUB      sp,sp,#0x3c
;;;270      char str2[50];
;;;271    	u8 sx,sy;
;;;272    	
;;;273    	sprintf(str2,"定时");
000004  a12b              ADR      r1,|L4.180|
000006  a802              ADD      r0,sp,#8
000008  f7fffffe          BL       __2sprintf
;;;274    	sx = 20; sy = 80;
00000c  2414              MOVS     r4,#0x14
00000e  2550              MOVS     r5,#0x50
;;;275    	Gui_DrawFont_GBK24(sx,sy,GREEN,BLACK,(u8 *)str2);
000010  a802              ADD      r0,sp,#8
000012  2300              MOVS     r3,#0
000014  f44f62fc          MOV      r2,#0x7e0
000018  4629              MOV      r1,r5
00001a  9000              STR      r0,[sp,#0]
00001c  4620              MOV      r0,r4
00001e  f7fffffe          BL       Gui_DrawFont_GBK24
;;;276    	sx += 24*2;
000022  3430              ADDS     r4,r4,#0x30
;;;277    	LCD_ShowChar(sx,sy,':',24,0);//:
000024  2000              MOVS     r0,#0
000026  2318              MOVS     r3,#0x18
000028  223a              MOVS     r2,#0x3a
00002a  4629              MOV      r1,r5
00002c  9000              STR      r0,[sp,#0]
00002e  4620              MOV      r0,r4
000030  f7fffffe          BL       LCD_ShowChar
;;;278    	sx += 24;
000034  3418              ADDS     r4,r4,#0x18
;;;279    
;;;280    	LCD_ShowxNum(sx,sy,timeing.time_h ,2,24,128);//整数
000036  2080              MOVS     r0,#0x80
000038  2118              MOVS     r1,#0x18
00003a  e9cd1000          STRD     r1,r0,[sp,#0]
00003e  481f              LDR      r0,|L4.188|
000040  8882              LDRH     r2,[r0,#4]  ; timeing
000042  2302              MOVS     r3,#2
000044  4629              MOV      r1,r5
000046  4620              MOV      r0,r4
000048  f7fffffe          BL       LCD_ShowxNum
;;;281    	timeing_coord.sx_h = sx;timeing_coord.sy_h = sy+24;
00004c  481c              LDR      r0,|L4.192|
00004e  8004              STRH     r4,[r0,#0]
000050  f1050018          ADD      r0,r5,#0x18
000054  491a              LDR      r1,|L4.192|
000056  8048              STRH     r0,[r1,#2]
;;;282    	timeing_coord.end_x_h = sx+12*2;timeing_coord.end_y_h = sy+24;
000058  f1040018          ADD      r0,r4,#0x18
00005c  7108              STRB     r0,[r1,#4]
00005e  f1050018          ADD      r0,r5,#0x18
000062  7148              STRB     r0,[r1,#5]
;;;283    	sx +=12*2;
000064  f1040018          ADD      r0,r4,#0x18
000068  b2c4              UXTB     r4,r0
;;;284    	LCD_ShowChar(sx,sy,':',24,0);//小数点
00006a  2000              MOVS     r0,#0
00006c  2318              MOVS     r3,#0x18
00006e  223a              MOVS     r2,#0x3a
000070  4629              MOV      r1,r5
000072  9000              STR      r0,[sp,#0]
000074  4620              MOV      r0,r4
000076  f7fffffe          BL       LCD_ShowChar
;;;285    	sx += 12;
00007a  f104000c          ADD      r0,r4,#0xc
00007e  b2c4              UXTB     r4,r0
;;;286    	LCD_ShowxNum(sx,sy,timeing.time_m ,2,24,128);//小数
000080  2080              MOVS     r0,#0x80
000082  2118              MOVS     r1,#0x18
000084  e9cd1000          STRD     r1,r0,[sp,#0]
000088  480c              LDR      r0,|L4.188|
00008a  88c2              LDRH     r2,[r0,#6]  ; timeing
00008c  2302              MOVS     r3,#2
00008e  4629              MOV      r1,r5
000090  4620              MOV      r0,r4
000092  f7fffffe          BL       LCD_ShowxNum
;;;287    
;;;288    	timeing_coord.sx_l = sx;timeing_coord.sy_l = sy+24;
000096  480a              LDR      r0,|L4.192|
000098  8184              STRH     r4,[r0,#0xc]
00009a  f1050018          ADD      r0,r5,#0x18
00009e  4908              LDR      r1,|L4.192|
0000a0  81c8              STRH     r0,[r1,#0xe]
;;;289    	timeing_coord.end_x_l = sx+12*3;timeing_coord.end_y_l = sy+24;
0000a2  f1040024          ADD      r0,r4,#0x24
0000a6  7408              STRB     r0,[r1,#0x10]
0000a8  f1050018          ADD      r0,r5,#0x18
0000ac  7448              STRB     r0,[r1,#0x11]
;;;290    }
0000ae  b00f              ADD      sp,sp,#0x3c
0000b0  bd30              POP      {r4,r5,pc}
;;;291    /*********************************************************/
                          ENDP

0000b2  0000              DCW      0x0000
                  |L4.180|
0000b4  b6a8cab1          DCB      182,168,202,177,0
0000b8  00      
0000b9  00                DCB      0
0000ba  00                DCB      0
0000bb  00                DCB      0
                  |L4.188|
                          DCD      timeing
                  |L4.192|
                          DCD      timeing_coord

                          AREA ||i.Show_use||, CODE, READONLY, ALIGN=2

                  Show_use PROC
;;;238    /*********************************************************/
;;;239    void Show_use(void)
000000  b530              PUSH     {r4,r5,lr}
;;;240    {
000002  b09d              SUB      sp,sp,#0x74
;;;241      char str2[50];
;;;242      char str3[50];
;;;243    	u8 sx,sy;
;;;244    	
;;;245    	sprintf(str2,"已用");
000004  a135              ADR      r1,|L5.220|
000006  a810              ADD      r0,sp,#0x40
000008  f7fffffe          BL       __2sprintf
;;;246    	sx = 20; sy = 50;
00000c  2414              MOVS     r4,#0x14
00000e  2532              MOVS     r5,#0x32
;;;247    	Gui_DrawFont_GBK24(sx,sy,GREEN,BLACK,(u8 *)str2);
000010  a810              ADD      r0,sp,#0x40
000012  2300              MOVS     r3,#0
000014  f44f62fc          MOV      r2,#0x7e0
000018  4629              MOV      r1,r5
00001a  9000              STR      r0,[sp,#0]
00001c  4620              MOV      r0,r4
00001e  f7fffffe          BL       Gui_DrawFont_GBK24
;;;248    	sx += 24*2;
000022  3430              ADDS     r4,r4,#0x30
;;;249    	LCD_ShowChar(sx,sy,':',24,0);//:
000024  2000              MOVS     r0,#0
000026  2318              MOVS     r3,#0x18
000028  223a              MOVS     r2,#0x3a
00002a  4629              MOV      r1,r5
00002c  9000              STR      r0,[sp,#0]
00002e  4620              MOV      r0,r4
000030  f7fffffe          BL       LCD_ShowChar
;;;250    	sx += 24;
000034  3418              ADDS     r4,r4,#0x18
;;;251    
;;;252    	LCD_ShowxNum(sx,sy,use.power_h,2,24,128);//整数
000036  2080              MOVS     r0,#0x80
000038  2118              MOVS     r1,#0x18
00003a  e9cd1000          STRD     r1,r0,[sp,#0]
00003e  4829              LDR      r0,|L5.228|
000040  8882              LDRH     r2,[r0,#4]  ; use
000042  2302              MOVS     r3,#2
000044  4629              MOV      r1,r5
000046  4620              MOV      r0,r4
000048  f7fffffe          BL       LCD_ShowxNum
;;;253    	use_coord.sx_h = sx;use_coord.sy_h = sy+24;
00004c  4826              LDR      r0,|L5.232|
00004e  8004              STRH     r4,[r0,#0]
000050  f1050018          ADD      r0,r5,#0x18
000054  4924              LDR      r1,|L5.232|
000056  8048              STRH     r0,[r1,#2]
;;;254    	use_coord.end_x_h = sx+12*2;use_coord.end_y_h = sy+24;
000058  f1040018          ADD      r0,r4,#0x18
00005c  7108              STRB     r0,[r1,#4]
00005e  f1050018          ADD      r0,r5,#0x18
000062  7148              STRB     r0,[r1,#5]
;;;255    	sx +=12*2;
000064  f1040018          ADD      r0,r4,#0x18
000068  b2c4              UXTB     r4,r0
;;;256    	LCD_ShowChar(sx,sy,'.',24,0);//小数点
00006a  2000              MOVS     r0,#0
00006c  2318              MOVS     r3,#0x18
00006e  222e              MOVS     r2,#0x2e
000070  4629              MOV      r1,r5
000072  9000              STR      r0,[sp,#0]
000074  4620              MOV      r0,r4
000076  f7fffffe          BL       LCD_ShowChar
;;;257    	sx += 12;
00007a  f104000c          ADD      r0,r4,#0xc
00007e  b2c4              UXTB     r4,r0
;;;258    	LCD_ShowxNum(sx,sy,use.power_l,3,24,128);//小数
000080  2080              MOVS     r0,#0x80
000082  2118              MOVS     r1,#0x18
000084  e9cd1000          STRD     r1,r0,[sp,#0]
000088  4816              LDR      r0,|L5.228|
00008a  88c2              LDRH     r2,[r0,#6]  ; use
00008c  2303              MOVS     r3,#3
00008e  4629              MOV      r1,r5
000090  4620              MOV      r0,r4
000092  f7fffffe          BL       LCD_ShowxNum
;;;259    	use_coord.sx_l = sx;use_coord.sy_l = sy+24;
000096  4814              LDR      r0,|L5.232|
000098  8184              STRH     r4,[r0,#0xc]
00009a  f1050018          ADD      r0,r5,#0x18
00009e  4912              LDR      r1,|L5.232|
0000a0  81c8              STRH     r0,[r1,#0xe]
;;;260    	use_coord.end_x_l = sx+12*3;use_coord.end_y_l = sy+24;
0000a2  f1040024          ADD      r0,r4,#0x24
0000a6  7408              STRB     r0,[r1,#0x10]
0000a8  f1050018          ADD      r0,r5,#0x18
0000ac  7448              STRB     r0,[r1,#0x11]
;;;261    	sprintf(str3,"m3");
0000ae  a10f              ADR      r1,|L5.236|
0000b0  a803              ADD      r0,sp,#0xc
0000b2  f7fffffe          BL       __2sprintf
;;;262    	sx += 12*3;sx +=10; sy +=10;
0000b6  f1040024          ADD      r0,r4,#0x24
0000ba  b2c4              UXTB     r4,r0
0000bc  f104000a          ADD      r0,r4,#0xa
0000c0  b2c4              UXTB     r4,r0
0000c2  350a              ADDS     r5,r5,#0xa
;;;263    	Gui_DrawFont_GBK24(sx,sy,GREEN,BLACK,(u8 *)str3);//m3
0000c4  a803              ADD      r0,sp,#0xc
0000c6  2300              MOVS     r3,#0
0000c8  f44f62fc          MOV      r2,#0x7e0
0000cc  4629              MOV      r1,r5
0000ce  9000              STR      r0,[sp,#0]
0000d0  4620              MOV      r0,r4
0000d2  f7fffffe          BL       Gui_DrawFont_GBK24
;;;264    	
;;;265    
;;;266    }
0000d6  b01d              ADD      sp,sp,#0x74
0000d8  bd30              POP      {r4,r5,pc}
;;;267    /*********************************************************/
                          ENDP

0000da  0000              DCW      0x0000
                  |L5.220|
0000dc  d2d1d3c3          DCB      210,209,211,195,0
0000e0  00      
0000e1  00                DCB      0
0000e2  00                DCB      0
0000e3  00                DCB      0
                  |L5.228|
                          DCD      use
                  |L5.232|
                          DCD      use_coord
                  |L5.236|
0000ec  6d3300            DCB      "m3",0
0000ef  00                DCB      0

                          AREA ||i.clear_cursor||, CODE, READONLY, ALIGN=2

                  clear_cursor PROC
;;;39     /********************************************************/
;;;40     void clear_cursor(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;41     {
;;;42     //	Gui_DrawLine(plan_coord.sx_h , 
;;;43     //		plan_coord.sy_h ,
;;;44     //		plan_coord.end_x_h ,
;;;45     //		plan_coord.end_y_h ,BLACK);
;;;46     //		
;;;47     //	Gui_DrawLine(plan_coord.sx_l ,  
;;;48     //		plan_coord.sy_l ,
;;;49     //		plan_coord.end_x_l ,
;;;50     //		plan_coord.end_y_l ,BLACK);
;;;51     
;;;52     //	Gui_DrawLine(use_coord.sx_h , 
;;;53     //		timeing_coord.sy_h ,
;;;54     //		timeing_coord.end_x_h ,
;;;55     //		timeing_coord.end_y_h ,BLACK);
;;;56     //		
;;;57     //	Gui_DrawLine(use_coord.sx_l , 
;;;58     //		timeing_coord.sy_l ,
;;;59     //		timeing_coord.end_x_l ,
;;;60     //		timeing_coord.end_y_l ,BLACK);
;;;61     
;;;62     //	Gui_DrawLine(time_coord.sx_h , 
;;;63     //		time_coord.sy_h ,
;;;64     //		time_coord.end_x_h ,
;;;65     //		time_coord.end_y_h ,BLACK);
;;;66     //		
;;;67     //	Gui_DrawLine(time_coord.sx_m , 
;;;68     //		time_coord.sy_m ,
;;;69     //		time_coord.end_x_m ,
;;;70     //		time_coord.end_y_m ,BLACK);
;;;71     //		
;;;72     //	Gui_DrawLine(time_coord.sx_l , 
;;;73     //		time_coord.sy_l ,
;;;74     //		time_coord.end_x_l ,
;;;75     //		time_coord.end_y_l ,BLACK);
;;;76     			
;;;77     //	Show_plan();
;;;78     //	Show_use();
;;;79     //	Show_timing();
;;;80     //	Show_time(tmp_tim);
;;;81     	
;;;82     	LCD_ShowxNum(plan_coord.sx_h,
000002  2080              MOVS     r0,#0x80
000004  2118              MOVS     r1,#0x18
000006  4b32              LDR      r3,|L6.208|
000008  e9cd1000          STRD     r1,r0,[sp,#0]
00000c  889a              LDRH     r2,[r3,#4]  ; plan
00000e  4b31              LDR      r3,|L6.212|
000010  885b              LDRH     r3,[r3,#2]  ; plan_coord
000012  3b18              SUBS     r3,r3,#0x18
000014  b299              UXTH     r1,r3
000016  4b2f              LDR      r3,|L6.212|
000018  8818              LDRH     r0,[r3,#0]  ; plan_coord
00001a  2302              MOVS     r3,#2
00001c  f7fffffe          BL       LCD_ShowxNum
;;;83     		plan_coord.sy_h-24,
;;;84     		plan.power_h,2,24,128);
;;;85     	LCD_ShowxNum(plan_coord.sx_l,
000020  2080              MOVS     r0,#0x80
000022  2118              MOVS     r1,#0x18
000024  4b2a              LDR      r3,|L6.208|
000026  e9cd1000          STRD     r1,r0,[sp,#0]
00002a  88da              LDRH     r2,[r3,#6]  ; plan
00002c  4b29              LDR      r3,|L6.212|
00002e  89db              LDRH     r3,[r3,#0xe]  ; plan_coord
000030  3b18              SUBS     r3,r3,#0x18
000032  b299              UXTH     r1,r3
000034  4b27              LDR      r3,|L6.212|
000036  8998              LDRH     r0,[r3,#0xc]  ; plan_coord
000038  2303              MOVS     r3,#3
00003a  f7fffffe          BL       LCD_ShowxNum
;;;86     		plan_coord.sy_l-24,
;;;87     		plan.power_l ,3,24,128);
;;;88     		
;;;89     	LCD_ShowxNum(timeing_coord.sx_h,
00003e  2080              MOVS     r0,#0x80
000040  2118              MOVS     r1,#0x18
000042  4b25              LDR      r3,|L6.216|
000044  e9cd1000          STRD     r1,r0,[sp,#0]
000048  889a              LDRH     r2,[r3,#4]  ; timeing
00004a  4b24              LDR      r3,|L6.220|
00004c  885b              LDRH     r3,[r3,#2]  ; timeing_coord
00004e  3b18              SUBS     r3,r3,#0x18
000050  b299              UXTH     r1,r3
000052  4b22              LDR      r3,|L6.220|
000054  8818              LDRH     r0,[r3,#0]  ; timeing_coord
000056  2302              MOVS     r3,#2
000058  f7fffffe          BL       LCD_ShowxNum
;;;90     		timeing_coord.sy_h-24,
;;;91     		timeing.time_h ,2,24,128);
;;;92     	LCD_ShowxNum(timeing_coord.sx_l,
00005c  2080              MOVS     r0,#0x80
00005e  2118              MOVS     r1,#0x18
000060  4b1d              LDR      r3,|L6.216|
000062  e9cd1000          STRD     r1,r0,[sp,#0]
000066  88da              LDRH     r2,[r3,#6]  ; timeing
000068  4b1c              LDR      r3,|L6.220|
00006a  89db              LDRH     r3,[r3,#0xe]  ; timeing_coord
00006c  3b18              SUBS     r3,r3,#0x18
00006e  b299              UXTH     r1,r3
000070  4b1a              LDR      r3,|L6.220|
000072  8998              LDRH     r0,[r3,#0xc]  ; timeing_coord
000074  2302              MOVS     r3,#2
000076  f7fffffe          BL       LCD_ShowxNum
;;;93     		timeing_coord.sy_l-24,
;;;94     		timeing.time_m,2,24,128);
;;;95     
;;;96     	show_num_32(time_coord.sx_h-10,
00007a  4a19              LDR      r2,|L6.224|
00007c  8893              LDRH     r3,[r2,#4]  ; tim
00007e  4a19              LDR      r2,|L6.228|
000080  8852              LDRH     r2,[r2,#2]  ; time_coord
000082  3a23              SUBS     r2,r2,#0x23
000084  b291              UXTH     r1,r2
000086  4a17              LDR      r2,|L6.228|
000088  8812              LDRH     r2,[r2,#0]  ; time_coord
00008a  3a0a              SUBS     r2,r2,#0xa
00008c  b290              UXTH     r0,r2
00008e  f44f62fc          MOV      r2,#0x7e0
000092  f7fffffe          BL       show_num_32
;;;97     		time_coord.sy_h-35,
;;;98     		GREEN,
;;;99     		tim.time_h);
;;;100    	show_num_32(time_coord.sx_m-10,
000096  4a14              LDR      r2,|L6.232|
000098  88d3              LDRH     r3,[r2,#6]  ; tmp_tim
00009a  4a12              LDR      r2,|L6.228|
00009c  8912              LDRH     r2,[r2,#8]  ; time_coord
00009e  3a23              SUBS     r2,r2,#0x23
0000a0  b291              UXTH     r1,r2
0000a2  4a10              LDR      r2,|L6.228|
0000a4  88d2              LDRH     r2,[r2,#6]  ; time_coord
0000a6  3a0a              SUBS     r2,r2,#0xa
0000a8  b290              UXTH     r0,r2
0000aa  f44f62fc          MOV      r2,#0x7e0
0000ae  f7fffffe          BL       show_num_32
;;;101    		time_coord.sy_m-35,
;;;102    		GREEN,
;;;103    		tmp_tim.time_m);
;;;104    	show_num_32(time_coord.sx_l-10,
0000b2  4a0b              LDR      r2,|L6.224|
0000b4  8913              LDRH     r3,[r2,#8]  ; tim
0000b6  4a0b              LDR      r2,|L6.228|
0000b8  89d2              LDRH     r2,[r2,#0xe]  ; time_coord
0000ba  3a23              SUBS     r2,r2,#0x23
0000bc  b291              UXTH     r1,r2
0000be  4a09              LDR      r2,|L6.228|
0000c0  8992              LDRH     r2,[r2,#0xc]  ; time_coord
0000c2  3a0a              SUBS     r2,r2,#0xa
0000c4  b290              UXTH     r0,r2
0000c6  f44f62fc          MOV      r2,#0x7e0
0000ca  f7fffffe          BL       show_num_32
;;;105    		time_coord.sy_l-35,
;;;106    		GREEN,
;;;107    		tim.time_s);				
;;;108    		
;;;109    }
0000ce  bd1c              POP      {r2-r4,pc}
;;;110    /********************************************************/
                          ENDP

                  |L6.208|
                          DCD      plan
                  |L6.212|
                          DCD      plan_coord
                  |L6.216|
                          DCD      timeing
                  |L6.220|
                          DCD      timeing_coord
                  |L6.224|
                          DCD      tim
                  |L6.228|
                          DCD      time_coord
                  |L6.232|
                          DCD      tmp_tim

                          AREA ||i.cursor||, CODE, READONLY, ALIGN=2

                  cursor PROC
;;;110    /********************************************************/
;;;111    void cursor(void)
000000  b50e              PUSH     {r1-r3,lr}
;;;112    {
;;;113    
;;;114    if(key_flag && (show_Refresh == 0))
000002  4860              LDR      r0,|L7.388|
000004  7800              LDRB     r0,[r0,#0]  ; key_flag
000006  2800              CMP      r0,#0
000008  d079              BEQ      |L7.254|
00000a  485f              LDR      r0,|L7.392|
00000c  7800              LDRB     r0,[r0,#0]  ; show_Refresh
00000e  2800              CMP      r0,#0
000010  d175              BNE      |L7.254|
;;;115    {
;;;116     clear_cursor();
000012  f7fffffe          BL       clear_cursor
;;;117     switch(key_cnt.set)
000016  485d              LDR      r0,|L7.396|
000018  f9b00024          LDRSH    r0,[r0,#0x24]  ; key_cnt
00001c  2808              CMP      r0,#8
00001e  d26f              BCS      |L7.256|
000020  e8dff000          TBB      [pc,r0]
000024  a904172a          DCB      0xa9,0x04,0x17,0x2a
000028  3d506f8c          DCB      0x3d,0x50,0x6f,0x8c
;;;118     {
;;;119    		case 1 :
;;;120    			{
;;;121    				LCD_ShowxNum_(plan_coord.sx_h,
00002c  2080              MOVS     r0,#0x80
00002e  2118              MOVS     r1,#0x18
000030  f44f4278          MOV      r2,#0xf800
000034  4b56              LDR      r3,|L7.400|
000036  e9cd2100          STRD     r2,r1,[sp,#0]
00003a  9002              STR      r0,[sp,#8]
00003c  889a              LDRH     r2,[r3,#4]  ; tmp_plan
00003e  4b55              LDR      r3,|L7.404|
000040  885b              LDRH     r3,[r3,#2]  ; plan_coord
000042  3b18              SUBS     r3,r3,#0x18
000044  b299              UXTH     r1,r3
000046  4b53              LDR      r3,|L7.404|
000048  8818              LDRH     r0,[r3,#0]  ; plan_coord
00004a  2302              MOVS     r3,#2
00004c  f7fffffe          BL       LCD_ShowxNum_
;;;122    					plan_coord.sy_h-24,
;;;123    					tmp_plan.power_h,2,RED,24,128);//整数
;;;124    //				Gui_DrawLine(plan_coord.sx_h , 
;;;125    //					plan_coord.sy_h ,
;;;126    //					plan_coord.end_x_h ,
;;;127    //					plan_coord.end_y_h ,RED);
;;;128    			}
;;;129    			break ;
000050  e092              B        |L7.376|
;;;130    			
;;;131    		case 2 :
;;;132    				LCD_ShowxNum_(plan_coord.sx_l,
000052  2080              MOVS     r0,#0x80
000054  2118              MOVS     r1,#0x18
000056  f44f4278          MOV      r2,#0xf800
00005a  4b4d              LDR      r3,|L7.400|
00005c  e9cd2100          STRD     r2,r1,[sp,#0]
000060  9002              STR      r0,[sp,#8]
000062  88da              LDRH     r2,[r3,#6]  ; tmp_plan
000064  4b4b              LDR      r3,|L7.404|
000066  89db              LDRH     r3,[r3,#0xe]  ; plan_coord
000068  3b18              SUBS     r3,r3,#0x18
00006a  b299              UXTH     r1,r3
00006c  4b49              LDR      r3,|L7.404|
00006e  8998              LDRH     r0,[r3,#0xc]  ; plan_coord
000070  2303              MOVS     r3,#3
000072  f7fffffe          BL       LCD_ShowxNum_
;;;133    					plan_coord.sy_l-24,
;;;134    					tmp_plan.power_l ,3,RED,24,128);//小数			
;;;135    //				Gui_DrawLine(plan_coord.sx_l ,  
;;;136    //					plan_coord.sy_l ,
;;;137    //					plan_coord.end_x_l ,
;;;138    //					plan_coord.end_y_l ,RED);
;;;139    			break ;
000076  e07f              B        |L7.376|
;;;140    			
;;;141    		case 3 :
;;;142    				LCD_ShowxNum_(timeing_coord.sx_h,
000078  2080              MOVS     r0,#0x80
00007a  2118              MOVS     r1,#0x18
00007c  f44f4278          MOV      r2,#0xf800
000080  4b45              LDR      r3,|L7.408|
000082  e9cd2100          STRD     r2,r1,[sp,#0]
000086  9002              STR      r0,[sp,#8]
000088  889a              LDRH     r2,[r3,#4]  ; timeing_tmp
00008a  4b44              LDR      r3,|L7.412|
00008c  885b              LDRH     r3,[r3,#2]  ; timeing_coord
00008e  3b18              SUBS     r3,r3,#0x18
000090  b299              UXTH     r1,r3
000092  4b42              LDR      r3,|L7.412|
000094  8818              LDRH     r0,[r3,#0]  ; timeing_coord
000096  2302              MOVS     r3,#2
000098  f7fffffe          BL       LCD_ShowxNum_
;;;143    					timeing_coord.sy_h-24,
;;;144    					timeing_tmp.time_h ,2,RED,24,128);//整数
;;;145    //				Gui_DrawLine(timeing_coord.sx_h , 
;;;146    //					timeing_coord.sy_h ,
;;;147    //					timeing_coord.end_x_h ,
;;;148    //					timeing_coord.end_y_h ,RED);
;;;149    				break ;
00009c  e06c              B        |L7.376|
;;;150    						
;;;151    		case 4 :
;;;152    				LCD_ShowxNum_(timeing_coord.sx_l,
00009e  2080              MOVS     r0,#0x80
0000a0  2118              MOVS     r1,#0x18
0000a2  f44f4278          MOV      r2,#0xf800
0000a6  4b3c              LDR      r3,|L7.408|
0000a8  e9cd2100          STRD     r2,r1,[sp,#0]
0000ac  9002              STR      r0,[sp,#8]
0000ae  88da              LDRH     r2,[r3,#6]  ; timeing_tmp
0000b0  4b3a              LDR      r3,|L7.412|
0000b2  89db              LDRH     r3,[r3,#0xe]  ; timeing_coord
0000b4  3b18              SUBS     r3,r3,#0x18
0000b6  b299              UXTH     r1,r3
0000b8  4b38              LDR      r3,|L7.412|
0000ba  8998              LDRH     r0,[r3,#0xc]  ; timeing_coord
0000bc  2302              MOVS     r3,#2
0000be  f7fffffe          BL       LCD_ShowxNum_
;;;153    					timeing_coord.sy_l-24,
;;;154    					timeing_tmp.time_m,2,RED,24,128);//小数
;;;155    //				Gui_DrawLine(timeing_coord.sx_l , 
;;;156    //					timeing_coord.sy_l ,
;;;157    //					timeing_coord.end_x_l ,
;;;158    //					timeing_coord.end_y_l ,RED);
;;;159    						break ;
0000c2  e059              B        |L7.376|
;;;160    		case 5 :
;;;161    				show_num_32(time_coord.sx_h-10,
0000c4  4a36              LDR      r2,|L7.416|
0000c6  8893              LDRH     r3,[r2,#4]  ; tmp_tim
0000c8  4a36              LDR      r2,|L7.420|
0000ca  8852              LDRH     r2,[r2,#2]  ; time_coord
0000cc  3a23              SUBS     r2,r2,#0x23
0000ce  b291              UXTH     r1,r2
0000d0  4a34              LDR      r2,|L7.420|
0000d2  8812              LDRH     r2,[r2,#0]  ; time_coord
0000d4  3a0a              SUBS     r2,r2,#0xa
0000d6  b290              UXTH     r0,r2
0000d8  f44f4278          MOV      r2,#0xf800
0000dc  f7fffffe          BL       show_num_32
;;;162    					time_coord.sy_h-35,
;;;163    					RED,
;;;164    					tmp_tim.time_h);
;;;165    				RTC_Set(2017,9,23,
0000e0  4831              LDR      r0,|L7.424|
0000e2  7880              LDRB     r0,[r0,#2]  ; calendar
0000e4  4930              LDR      r1,|L7.424|
0000e6  7849              LDRB     r1,[r1,#1]  ; calendar
0000e8  e9cd1000          STRD     r1,r0,[sp,#0]
0000ec  482c              LDR      r0,|L7.416|
0000ee  7903              LDRB     r3,[r0,#4]  ; tmp_tim
0000f0  2217              MOVS     r2,#0x17
0000f2  2109              MOVS     r1,#9
0000f4  f24070e1          MOV      r0,#0x7e1
0000f8  f7fffffe          BL       RTC_Set
;;;166    					tmp_tim.time_h,
;;;167    					calendar.min,
;;;168    					calendar.sec);
;;;169    //				Gui_DrawLine(time_coord.sx_h , 
;;;170    //					time_coord.sy_h ,
;;;171    //					time_coord.end_x_h ,
;;;172    //					time_coord.end_y_h ,RED);
;;;173    						break ;
0000fc  e03c              B        |L7.376|
                  |L7.254|
0000fe  e03f              B        |L7.384|
                  |L7.256|
000100  e039              B        |L7.374|
;;;174    		case 6 :
;;;175    				show_num_32(time_coord.sx_m-10,
000102  4a27              LDR      r2,|L7.416|
000104  88d3              LDRH     r3,[r2,#6]  ; tmp_tim
000106  4a27              LDR      r2,|L7.420|
000108  8912              LDRH     r2,[r2,#8]  ; time_coord
00010a  3a23              SUBS     r2,r2,#0x23
00010c  b291              UXTH     r1,r2
00010e  4a25              LDR      r2,|L7.420|
000110  88d2              LDRH     r2,[r2,#6]  ; time_coord
000112  3a0a              SUBS     r2,r2,#0xa
000114  b290              UXTH     r0,r2
000116  f44f4278          MOV      r2,#0xf800
00011a  f7fffffe          BL       show_num_32
;;;176    					time_coord.sy_m-35,
;;;177    					RED,
;;;178    					tmp_tim.time_m);
;;;179    				RTC_Set(2017,9,23,
00011e  4822              LDR      r0,|L7.424|
000120  7880              LDRB     r0,[r0,#2]  ; calendar
000122  491f              LDR      r1,|L7.416|
000124  7989              LDRB     r1,[r1,#6]  ; tmp_tim
000126  e9cd1000          STRD     r1,r0,[sp,#0]
00012a  481f              LDR      r0,|L7.424|
00012c  7803              LDRB     r3,[r0,#0]  ; calendar
00012e  2217              MOVS     r2,#0x17
000130  2109              MOVS     r1,#9
000132  f24070e1          MOV      r0,#0x7e1
000136  f7fffffe          BL       RTC_Set
;;;180    					calendar.hour,
;;;181    					tmp_tim.time_m,
;;;182    					calendar.sec);
;;;183    //				Gui_DrawLine(time_coord.sx_m , 
;;;184    //					time_coord.sy_m ,
;;;185    //					time_coord.end_x_m ,
;;;186    //					time_coord.end_y_m ,RED);
;;;187    						break ;
00013a  e01d              B        |L7.376|
;;;188    						
;;;189    		case 7 :
;;;190    				show_num_32(time_coord.sx_l-10,
00013c  4a18              LDR      r2,|L7.416|
00013e  8913              LDRH     r3,[r2,#8]  ; tmp_tim
000140  4a18              LDR      r2,|L7.420|
000142  89d2              LDRH     r2,[r2,#0xe]  ; time_coord
000144  3a23              SUBS     r2,r2,#0x23
000146  b291              UXTH     r1,r2
000148  4a16              LDR      r2,|L7.420|
00014a  8992              LDRH     r2,[r2,#0xc]  ; time_coord
00014c  3a0a              SUBS     r2,r2,#0xa
00014e  b290              UXTH     r0,r2
000150  f44f4278          MOV      r2,#0xf800
000154  f7fffffe          BL       show_num_32
;;;191    					time_coord.sy_l-35,
;;;192    					RED,
;;;193    					tmp_tim.time_s);
;;;194    				RTC_Set(2017,9,23,
000158  4811              LDR      r0,|L7.416|
00015a  7a00              LDRB     r0,[r0,#8]  ; tmp_tim
00015c  4912              LDR      r1,|L7.424|
00015e  7849              LDRB     r1,[r1,#1]  ; calendar
000160  e9cd1000          STRD     r1,r0,[sp,#0]
000164  4810              LDR      r0,|L7.424|
000166  7803              LDRB     r3,[r0,#0]  ; calendar
000168  2217              MOVS     r2,#0x17
00016a  2109              MOVS     r1,#9
00016c  f24070e1          MOV      r0,#0x7e1
000170  f7fffffe          BL       RTC_Set
;;;195    					calendar.hour,
;;;196    					calendar.min,
;;;197    					tmp_tim.time_s);
;;;198    //				Gui_DrawLine(time_coord.sx_l , 
;;;199    //					time_coord.sy_l ,
;;;200    //					time_coord.end_x_l ,
;;;201    //					time_coord.end_y_l ,RED);
;;;202    						break ;
000174  e000              B        |L7.376|
                  |L7.374|
;;;203    						
;;;204    			default:
;;;205    				break ;
000176  bf00              NOP      
                  |L7.376|
000178  bf00              NOP                            ;129
;;;206    	}
;;;207    	key_flag=key_no;
00017a  2000              MOVS     r0,#0
00017c  4901              LDR      r1,|L7.388|
00017e  7008              STRB     r0,[r1,#0]
                  |L7.384|
;;;208     }
;;;209    }
000180  bd0e              POP      {r1-r3,pc}
;;;210    /*********************************************************/
                          ENDP

000182  0000              DCW      0x0000
                  |L7.388|
                          DCD      key_flag
                  |L7.392|
                          DCD      show_Refresh
                  |L7.396|
                          DCD      key_cnt
                  |L7.400|
                          DCD      tmp_plan
                  |L7.404|
                          DCD      plan_coord
                  |L7.408|
                          DCD      timeing_tmp
                  |L7.412|
                          DCD      timeing_coord
                  |L7.416|
                          DCD      tmp_tim
                  |L7.420|
                          DCD      time_coord
                  |L7.424|
                          DCD      calendar

                          AREA ||i.time_show||, CODE, READONLY, ALIGN=2

                  time_show PROC
;;;349    /*********************************************************/
;;;350    void time_show(void)
000000  b510              PUSH     {r4,lr}
;;;351    {
;;;352      if(show_Refresh)
000002  4816              LDR      r0,|L8.92|
000004  7800              LDRB     r0,[r0,#0]  ; show_Refresh
000006  b338              CBZ      r0,|L8.88|
;;;353    	{
;;;354    
;;;355    		tim.time_h =	tmp_tim.time_h = calendar.hour ;
000008  4815              LDR      r0,|L8.96|
00000a  7800              LDRB     r0,[r0,#0]  ; calendar
00000c  4915              LDR      r1,|L8.100|
00000e  8088              STRH     r0,[r1,#4]
000010  4915              LDR      r1,|L8.104|
000012  8088              STRH     r0,[r1,#4]
;;;356    		tim.time_m =	tmp_tim.time_m = calendar.min  ;
000014  4812              LDR      r0,|L8.96|
000016  7840              LDRB     r0,[r0,#1]  ; calendar
000018  4912              LDR      r1,|L8.100|
00001a  80c8              STRH     r0,[r1,#6]
00001c  4912              LDR      r1,|L8.104|
00001e  80c8              STRH     r0,[r1,#6]
;;;357    		tim.time_s =	tmp_tim.time_s = calendar.sec  ;
000020  480f              LDR      r0,|L8.96|
000022  7880              LDRB     r0,[r0,#2]  ; calendar
000024  490f              LDR      r1,|L8.100|
000026  8108              STRH     r0,[r1,#8]
000028  490f              LDR      r1,|L8.104|
00002a  8108              STRH     r0,[r1,#8]
;;;358    		tim.time_amp = tim.time_h *100*100 +tim.time_m*100 +tim.time_s ;
00002c  4608              MOV      r0,r1
00002e  8880              LDRH     r0,[r0,#4]  ; tim
000030  2164              MOVS     r1,#0x64
000032  4348              MULS     r0,r1,r0
000034  4348              MULS     r0,r1,r0
000036  490c              LDR      r1,|L8.104|
000038  88c9              LDRH     r1,[r1,#6]  ; tim
00003a  eb0102c1          ADD      r2,r1,r1,LSL #3
00003e  eb021101          ADD      r1,r2,r1,LSL #4
000042  eb000081          ADD      r0,r0,r1,LSL #2
000046  4908              LDR      r1,|L8.104|
000048  8909              LDRH     r1,[r1,#8]  ; tim
00004a  4408              ADD      r0,r0,r1
00004c  4906              LDR      r1,|L8.104|
00004e  6008              STR      r0,[r1,#0]  ; tim
;;;359    		
;;;360    		Show_time(tim);
000050  4608              MOV      r0,r1
000052  c807              LDM      r0,{r0-r2}
000054  f7fffffe          BL       Show_time
                  |L8.88|
;;;361    	}
;;;362    
;;;363    }
000058  bd10              POP      {r4,pc}
                          ENDP

00005a  0000              DCW      0x0000
                  |L8.92|
                          DCD      show_Refresh
                  |L8.96|
                          DCD      calendar
                  |L8.100|
                          DCD      tmp_tim
                  |L8.104|
                          DCD      tim

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  timeing
                          %        12
                  timeing_tmp
                          %        12
                  tim
                          %        12
                  tmp_tim
                          %        12
                  plan_coord
                          %        18
                  use_coord
                          %        18
                  time_coord
                          %        18
                  timeing_coord
                          %        18

                          AREA ||.data||, DATA, ALIGN=2

                  ShowTask_Handler
                          DCD      0x00000000
                  err
000004  0000              DCB      0x00,0x00
                  plan
000006  0000              DCB      0x00,0x00
                          DCD      0x00000000
00000c  0000              DCB      0x00,0x00
                  tmp_plan
00000e  0000              DCB      0x00,0x00
                          DCD      0x00000000
000014  0000              DCB      0x00,0x00
                  use
000016  0000              DCB      0x00,0x00
                          DCD      0x00000000
00001c  0000              DCB      0x00,0x00
                  tmp_use
00001e  0000              DCB      0x00,0x00
                          DCD      0x00000000
000024  0000              DCB      0x00,0x00
                  show_Refresh
000026  01                DCB      0x01
