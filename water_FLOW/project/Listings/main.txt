; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\obj\main.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=..\obj\main.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\main -I..\component\delay -I..\component\LED -I..\component\sys -I..\component\usart -I..\STM32_lib\CORE -I..\STM32_lib\inc -I..\STM32_lib\user_layer -I..\component\KEY -I..\component\lcd_driver -I..\component\gui -I..\component\UI -I..\component\RTC -I..\component\FreeRTOS\Source\include -I..\component\FreeRTOS\Source\portable\RVDS\ARM_CM3 -I..\component\FreeRTOS -I..\component\FreeRTOS\Source\portable\MemMang -I..\component\FreeRTOS\Source\CMSIS_RTOS -I..\component\STMFLASH -I..\component\PWM_in -IE:\1.项目\1.水流量计\WATER-FLOW\water_FLOW\project\RTE -ID:\1.Software_\5.Keil5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\1.Software_\5.Keil5\ARM\CMSIS\Include -D__UVISION_VERSION=514 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -Dwater_flow --omf_browse=..\obj\main.crf ..\main\main.c]
                          THUMB

                          AREA ||i._init_||, CODE, READONLY, ALIGN=2

                  _init_ PROC
;;;52     ************************************************/
;;;53     void _init_(void)
000000  b510              PUSH     {r4,lr}
;;;54     {
;;;55     	taskENTER_CRITICAL()	;
000002  f7fffffe          BL       vPortEnterCritical
;;;56     	
;;;57     	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_4); 
000006  f44f7040          MOV      r0,#0x300
00000a  f7fffffe          BL       NVIC_PriorityGroupConfig
;;;58     	KEY_Init();
00000e  f7fffffe          BL       KEY_Init
;;;59     	Relay_Init();
000012  f7fffffe          BL       Relay_Init
;;;60     	delay_init();	    //延时函数初始化	  
000016  f7fffffe          BL       delay_init
;;;61     	LED_Init();		  	//LED初始化
00001a  f7fffffe          BL       LED_Init
;;;62     	uart_init(115200);
00001e  f44f30e1          MOV      r0,#0x1c200
000022  f7fffffe          BL       uart_init
;;;63     	Lcd_Init();
000026  f7fffffe          BL       Lcd_Init
;;;64     	RTC_Init();
00002a  f7fffffe          BL       RTC_Init
;;;65     	delay_ms(300);
00002e  f44f7096          MOV      r0,#0x12c
000032  f7fffffe          BL       delay_ms
;;;66     	printf("AT+CONA341513CD76A9\r\n");//连接蓝牙设备
000036  a017              ADR      r0,|L1.148|
000038  f7fffffe          BL       __2printf
;;;67     	TIM3_PWM_Init(999,72-1);
00003c  2147              MOVS     r1,#0x47
00003e  f24030e7          MOV      r0,#0x3e7
000042  f7fffffe          BL       TIM3_PWM_Init
;;;68     	delay_ms(1000);
000046  f44f707a          MOV      r0,#0x3e8
00004a  f7fffffe          BL       delay_ms
;;;69     	TIM5_IN_Init(0XFFFF,720-1);
00004e  f24021cf          MOV      r1,#0x2cf
000052  f64f70ff          MOV      r0,#0xffff
000056  f7fffffe          BL       TIM5_IN_Init
;;;70     	printf("water flow working !\r\n");
00005a  a014              ADR      r0,|L1.172|
00005c  f7fffffe          BL       __2printf
;;;71     
;;;72     	Lcd_Clear( BLACK );
000060  2000              MOVS     r0,#0
000062  f7fffffe          BL       Lcd_Clear
;;;73     
;;;74     	tim.time_h =calendar.hour;
000066  4817              LDR      r0,|L1.196|
000068  7800              LDRB     r0,[r0,#0]  ; calendar
00006a  4917              LDR      r1,|L1.200|
00006c  8088              STRH     r0,[r1,#4]
;;;75     	tim.time_m = calendar.min;
00006e  4815              LDR      r0,|L1.196|
000070  7840              LDRB     r0,[r0,#1]  ; calendar
000072  80c8              STRH     r0,[r1,#6]
;;;76     	tim.time_s = calendar.sec; 
000074  4813              LDR      r0,|L1.196|
000076  7880              LDRB     r0,[r0,#2]  ; calendar
000078  8108              STRH     r0,[r1,#8]
;;;77     	
;;;78     	Show_plan();
00007a  f7fffffe          BL       Show_plan
;;;79     	Show_use();
00007e  f7fffffe          BL       Show_use
;;;80     	Show_timing();
000082  f7fffffe          BL       Show_timing
;;;81     	Show_time(tim);
000086  4810              LDR      r0,|L1.200|
000088  c807              LDM      r0,{r0-r2}
00008a  f7fffffe          BL       Show_time
;;;82     	
;;;83     	taskEXIT_CRITICAL();
00008e  f7fffffe          BL       vPortExitCritical
;;;84     
;;;85     }
000092  bd10              POP      {r4,pc}
;;;86     
                          ENDP

                  |L1.148|
000094  41542b43          DCB      "AT+CONA341513CD76A9\r\n",0
000098  4f4e4133
00009c  34313531
0000a0  33434437
0000a4  3641390d
0000a8  0a00    
0000aa  00                DCB      0
0000ab  00                DCB      0
                  |L1.172|
0000ac  77617465          DCB      "water flow working !\r\n",0
0000b0  7220666c
0000b4  6f772077
0000b8  6f726b69
0000bc  6e672021
0000c0  0d0a00  
0000c3  00                DCB      0
                  |L1.196|
                          DCD      calendar
                  |L1.200|
                          DCD      tim

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                  main PROC
;;;92     **********************************************************/
;;;93      int main(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;94      {	
;;;95     	_init_();
000002  f7fffffe          BL       _init_
;;;96     	
;;;97     	xTaskCreate((TaskFunction_t		)start_task,
000006  4807              LDR      r0,|L2.36|
000008  2101              MOVS     r1,#1
00000a  2300              MOVS     r3,#0
00000c  2280              MOVS     r2,#0x80
00000e  e9cd1000          STRD     r1,r0,[sp,#0]
000012  a105              ADR      r1,|L2.40|
000014  4807              LDR      r0,|L2.52|
000016  f7fffffe          BL       xTaskCreate
;;;98     							(const char *			)"start_task",
;;;99     							(uint16_t					)START_STK_SIZE,
;;;100    							(void*						)NULL,
;;;101    							(UBaseType_t			)START_TASK_PRIO,
;;;102    							(TaskHandle_t*		)&startTask_Handler);
;;;103    	vTaskStartScheduler();
00001a  f7fffffe          BL       vTaskStartScheduler
;;;104    	
;;;105     }
00001e  2000              MOVS     r0,#0
000020  bd1c              POP      {r2-r4,pc}
                          ENDP

000022  0000              DCW      0x0000
                  |L2.36|
                          DCD      startTask_Handler
                  |L2.40|
000028  73746172          DCB      "start_task",0
00002c  745f7461
000030  736b00  
000033  00                DCB      0
                  |L2.52|
                          DCD      start_task

                          AREA ||i.start_task||, CODE, READONLY, ALIGN=2

                  start_task PROC
;;;19     *************************************************/
;;;20     void start_task(void * pvParameters)
000000  b51c              PUSH     {r2-r4,lr}
;;;21     {
000002  4604              MOV      r4,r0
;;;22     	taskENTER_CRITICAL()	;
000004  f7fffffe          BL       vPortEnterCritical
;;;23     	
;;;24     	xTaskCreate((TaskFunction_t		)LED_task,
000008  4812              LDR      r0,|L3.84|
00000a  2103              MOVS     r1,#3
00000c  2300              MOVS     r3,#0
00000e  2280              MOVS     r2,#0x80
000010  e9cd1000          STRD     r1,r0,[sp,#0]
000014  a110              ADR      r1,|L3.88|
000016  4813              LDR      r0,|L3.100|
000018  f7fffffe          BL       xTaskCreate
;;;25     							(const char *			)"LED_task",
;;;26     							(uint16_t					)LED_STK_SIZE,
;;;27     							(void*						)NULL,
;;;28     							(UBaseType_t			)LED_TASK_PRIO,
;;;29     							(TaskHandle_t*		)&LEDTask_Handler);
;;;30     							
;;;31     	xTaskCreate((TaskFunction_t		)Show_task,
00001c  4812              LDR      r0,|L3.104|
00001e  2103              MOVS     r1,#3
000020  2300              MOVS     r3,#0
000022  f44f6200          MOV      r2,#0x800
000026  e9cd1000          STRD     r1,r0,[sp,#0]
00002a  a110              ADR      r1,|L3.108|
00002c  4812              LDR      r0,|L3.120|
00002e  f7fffffe          BL       xTaskCreate
;;;32     							(const char *			)"Show_task",
;;;33     							(uint16_t					)Show_STK_SIZE,
;;;34     							(void*						)NULL,
;;;35     							(UBaseType_t			)Show_TASK_PRIO,
;;;36     							(TaskHandle_t*		)&ShowTask_Handler);
;;;37     							
;;;38     	xTaskCreate((TaskFunction_t		)Key_task,
000032  4812              LDR      r0,|L3.124|
000034  2104              MOVS     r1,#4
000036  2300              MOVS     r3,#0
000038  020a              LSLS     r2,r1,#8
00003a  e9cd1000          STRD     r1,r0,[sp,#0]
00003e  a110              ADR      r1,|L3.128|
000040  4812              LDR      r0,|L3.140|
000042  f7fffffe          BL       xTaskCreate
;;;39     							(const char *			)"Key_task",
;;;40     							(uint16_t					)Key_STK_SIZE,
;;;41     							(void*						)NULL,
;;;42     							(UBaseType_t			)Key_TASK_PRIO,
;;;43     							(TaskHandle_t*		)&KeyTask_Handler);
;;;44     	vTaskDelete(startTask_Handler);	
000046  4812              LDR      r0,|L3.144|
000048  6800              LDR      r0,[r0,#0]  ; startTask_Handler
00004a  f7fffffe          BL       vTaskDelete
;;;45     	taskEXIT_CRITICAL();
00004e  f7fffffe          BL       vPortExitCritical
;;;46     }
000052  bd1c              POP      {r2-r4,pc}
;;;47     
                          ENDP

                  |L3.84|
                          DCD      LEDTask_Handler
                  |L3.88|
000058  4c45445f          DCB      "LED_task",0
00005c  7461736b
000060  00      
000061  00                DCB      0
000062  00                DCB      0
000063  00                DCB      0
                  |L3.100|
                          DCD      LED_task
                  |L3.104|
                          DCD      ShowTask_Handler
                  |L3.108|
00006c  53686f77          DCB      "Show_task",0
000070  5f746173
000074  6b00    
000076  00                DCB      0
000077  00                DCB      0
                  |L3.120|
                          DCD      Show_task
                  |L3.124|
                          DCD      KeyTask_Handler
                  |L3.128|
000080  4b65795f          DCB      "Key_task",0
000084  7461736b
000088  00      
000089  00                DCB      0
00008a  00                DCB      0
00008b  00                DCB      0
                  |L3.140|
                          DCD      Key_task
                  |L3.144|
                          DCD      startTask_Handler

                          AREA ||.data||, DATA, ALIGN=2

                  startTask_Handler
                          DCD      0x00000000

                  __ARM_use_no_argv EQU 0
