; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\obj\led.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=..\obj\led.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\main -I..\component\delay -I..\component\LED -I..\component\sys -I..\component\usart -I..\STM32_lib\CORE -I..\STM32_lib\inc -I..\STM32_lib\user_layer -I..\component\KEY -I..\component\lcd_driver -I..\component\gui -I..\component\UI -I..\component\RTC -I..\component\FreeRTOS\Source\include -I..\component\FreeRTOS\Source\portable\RVDS\ARM_CM3 -I..\component\FreeRTOS -I..\component\FreeRTOS\Source\portable\MemMang -I..\component\FreeRTOS\Source\CMSIS_RTOS -I..\component\STMFLASH -I..\component\PWM_in -IE:\1.项目\1.水流量计\WATER-FLOW\water_FLOW\project\RTE -ID:\1.Software_\5.Keil5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\1.Software_\5.Keil5\ARM\CMSIS\Include -D__UVISION_VERSION=514 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -Dwater_flow --omf_browse=..\obj\led.crf ..\component\LED\led.c]
                          THUMB

                          AREA ||i.Flow_||, CODE, READONLY, ALIGN=2

                  Flow_ PROC
;;;48     /*********************************************************/
;;;49     float Flow_(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;50     {
;;;51     	float k = 830.25f ;
000004  4d12              LDR      r5,|L1.80|
;;;52     	float v_flow ;
;;;53     	float kT ;
;;;54     	float ts =100*1000;
000006  4e13              LDR      r6,|L1.84|
;;;55     
;;;56     //	float VAL_[3];
;;;57     //	assert(_VAL);
;;;58     	if(show_Refresh)
000008  4813              LDR      r0,|L1.88|
00000a  7800              LDRB     r0,[r0,#0]  ; show_Refresh
00000c  b1d8              CBZ      r0,|L1.70|
;;;59     		{
;;;60     			if(_VAL != 0)
00000e  4813              LDR      r0,|L1.92|
000010  6800              LDR      r0,[r0,#0]  ; _VAL
000012  b1d8              CBZ      r0,|L1.76|
;;;61     			{
;;;62     				kT = k*_VAL ;
000014  4811              LDR      r0,|L1.92|
000016  6800              LDR      r0,[r0,#0]  ; _VAL
000018  f7fffffe          BL       __aeabi_ui2f
00001c  4680              MOV      r8,r0
00001e  4629              MOV      r1,r5
000020  f7fffffe          BL       __aeabi_fmul
000024  4604              MOV      r4,r0
;;;63     				v_flow = ts/(kT) ;
000026  4621              MOV      r1,r4
000028  4630              MOV      r0,r6
00002a  f7fffffe          BL       __aeabi_fdiv
00002e  4607              MOV      r7,r0
;;;64     				flow += v_flow ;
000030  4639              MOV      r1,r7
000032  480b              LDR      r0,|L1.96|
000034  6800              LDR      r0,[r0,#0]  ; flow
000036  f7fffffe          BL       __aeabi_fadd
00003a  4909              LDR      r1,|L1.96|
00003c  6008              STR      r0,[r1,#0]  ; flow
;;;65     				return flow ;
00003e  4608              MOV      r0,r1
000040  6800              LDR      r0,[r0,#0]  ; flow
                  |L1.66|
;;;66     			}
;;;67     		}
;;;68     	else
;;;69     	return flow ;
;;;70     }
000042  e8bd81f0          POP      {r4-r8,pc}
                  |L1.70|
000046  4806              LDR      r0,|L1.96|
000048  6800              LDR      r0,[r0,#0]            ;69  ; flow
00004a  e7fa              B        |L1.66|
                  |L1.76|
00004c  bf00              NOP      
00004e  e7f8              B        |L1.66|
;;;71      /********************************************************/
                          ENDP

                  |L1.80|
                          DCD      0x444f9000
                  |L1.84|
                          DCD      0x47c35000
                  |L1.88|
                          DCD      show_Refresh
                  |L1.92|
                          DCD      _VAL
                  |L1.96|
                          DCD      flow

                          AREA ||i.LED_Init||, CODE, READONLY, ALIGN=2

                  LED_Init PROC
;;;11     
;;;12     void LED_Init(void)
000000  b508              PUSH     {r3,lr}
;;;13     {
;;;14      
;;;15      GPIO_InitTypeDef  GPIO_InitStructure;
;;;16      	
;;;17      RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);	 //使能PB
000002  2101              MOVS     r1,#1
000004  2008              MOVS     r0,#8
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;18     	
;;;19      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_11;					//LED0-->PB.11 端口配置
00000a  f44f6000          MOV      r0,#0x800
00000e  f8ad0000          STRH     r0,[sp,#0]
;;;20      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP; 	//推挽输出
000012  2010              MOVS     r0,#0x10
000014  f88d0003          STRB     r0,[sp,#3]
;;;21      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;	//IO口速度为50MHz
000018  2003              MOVS     r0,#3
00001a  f88d0002          STRB     r0,[sp,#2]
;;;22      GPIO_Init(GPIOB, &GPIO_InitStructure);					 		//根据设定参数初始化GPIOB.11
00001e  4669              MOV      r1,sp
000020  4804              LDR      r0,|L2.52|
000022  f7fffffe          BL       GPIO_Init
;;;23      GPIO_SetBits(GPIOB,GPIO_Pin_11);										//PB.11 输出高
000026  f44f6100          MOV      r1,#0x800
00002a  4802              LDR      r0,|L2.52|
00002c  f7fffffe          BL       GPIO_SetBits
;;;24     
;;;25      }
000030  bd08              POP      {r3,pc}
;;;26      
                          ENDP

000032  0000              DCW      0x0000
                  |L2.52|
                          DCD      0x40010c00

                          AREA ||i.LED_task||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_e
                          REQUIRE _printf_fp_dec
                  LED_task PROC
;;;71      /********************************************************/
;;;72     void LED_task(void * pvParameters)
000000  2400              MOVS     r4,#0
;;;73     {
;;;74     	u8 i = 0 ;
;;;75     	while(1)
000002  e01e              B        |L3.66|
                  |L3.4|
;;;76     	{
;;;77     		LED0=0;
000004  2000              MOVS     r0,#0
000006  490f              LDR      r1,|L3.68|
000008  6008              STR      r0,[r1,#0]
;;;78     		vTaskDelay(500);
00000a  f44f70fa          MOV      r0,#0x1f4
00000e  f7fffffe          BL       vTaskDelay
;;;79     		LED0=1;
000012  2001              MOVS     r0,#1
000014  490c              LDR      r1,|L3.72|
000016  f8c101ac          STR      r0,[r1,#0x1ac]
;;;80     		
;;;81     		vTaskDelay(500);if(i == 50){i = 0 ;}
00001a  f44f70fa          MOV      r0,#0x1f4
00001e  f7fffffe          BL       vTaskDelay
000022  2c32              CMP      r4,#0x32
000024  d100              BNE      |L3.40|
000026  2400              MOVS     r4,#0
                  |L3.40|
;;;82     //		a = TIM_GetCapture3(TIM3);
;;;83     //		printf("pwm%d\r\n",a);
;;;84     		printf("PWM:%e L\r\n",Flow_());
000028  f7fffffe          BL       Flow_
00002c  4607              MOV      r7,r0
00002e  f7fffffe          BL       __aeabi_f2d
000032  4605              MOV      r5,r0
000034  462a              MOV      r2,r5
000036  460b              MOV      r3,r1
000038  a004              ADR      r0,|L3.76|
00003a  f7fffffe          BL       __2printf
;;;85     		i ++ ;
00003e  1c60              ADDS     r0,r4,#1
000040  b2c4              UXTB     r4,r0
                  |L3.66|
000042  e7df              B        |L3.4|
;;;86     	}
;;;87     }
                          ENDP

                  |L3.68|
                          DCD      0x422181ac
                  |L3.72|
                          DCD      0x42218000
                  |L3.76|
00004c  50574d3a          DCB      "PWM:%e L\r\n",0
000050  2565204c
000054  0d0a00  
000057  00                DCB      0

                          AREA ||i.Relay_Init||, CODE, READONLY, ALIGN=2

                  Relay_Init PROC
;;;29     **********************************************************/
;;;30     void Relay_Init(void)
000000  b508              PUSH     {r3,lr}
;;;31     {
;;;32      
;;;33      GPIO_InitTypeDef  GPIO_InitStructure;
;;;34      	
;;;35      RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC, ENABLE);	 //使能C4
000002  2101              MOVS     r1,#1
000004  2010              MOVS     r0,#0x10
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;36     	
;;;37      GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4;					//Relay-->PC.4端口配置
00000a  2010              MOVS     r0,#0x10
00000c  f8ad0000          STRH     r0,[sp,#0]
;;;38      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_OD; 			//上拉输出
000010  2014              MOVS     r0,#0x14
000012  f88d0003          STRB     r0,[sp,#3]
;;;39      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;	//IO口速度为50MHz
000016  2003              MOVS     r0,#3
000018  f88d0002          STRB     r0,[sp,#2]
;;;40      GPIO_Init(GPIOC, &GPIO_InitStructure);					 		//根据设定参数初始化GPIOB.11
00001c  4669              MOV      r1,sp
00001e  4804              LDR      r0,|L4.48|
000020  f7fffffe          BL       GPIO_Init
;;;41      GPIO_SetBits(GPIOC,GPIO_Pin_4);										//PC.4 输出高
000024  2110              MOVS     r1,#0x10
000026  4802              LDR      r0,|L4.48|
000028  f7fffffe          BL       GPIO_SetBits
;;;42     
;;;43      }
00002c  bd08              POP      {r3,pc}
;;;44     /*********************************************************
                          ENDP

00002e  0000              DCW      0x0000
                  |L4.48|
                          DCD      0x40011000

                          AREA ||.data||, DATA, ALIGN=2

                  LEDTask_Handler
                          DCD      0x00000000
                  flow
                          DCD      0x00000000
