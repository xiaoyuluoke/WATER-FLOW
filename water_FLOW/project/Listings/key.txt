; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\obj\key.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=..\obj\key.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\main -I..\component\delay -I..\component\LED -I..\component\sys -I..\component\usart -I..\STM32_lib\CORE -I..\STM32_lib\inc -I..\STM32_lib\user_layer -I..\component\KEY -I..\component\lcd_driver -I..\component\gui -I..\component\UI -I..\component\RTC -I..\component\FreeRTOS\Source\include -I..\component\FreeRTOS\Source\portable\RVDS\ARM_CM3 -I..\component\FreeRTOS -I..\component\FreeRTOS\Source\portable\MemMang -I..\component\FreeRTOS\Source\CMSIS_RTOS -I..\component\STMFLASH -I..\component\PWM_in -IE:\1.项目\1.水流量计\water_FLOW\project\RTE -ID:\1.Software_\5.Keil5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -ID:\1.Software_\5.Keil5\ARM\CMSIS\Include -D__UVISION_VERSION=514 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -Dwater_flow --omf_browse=..\obj\key.crf ..\component\KEY\key.c]
                          THUMB

                          AREA ||i.KEY_Init||, CODE, READONLY, ALIGN=2

                  KEY_Init PROC
;;;26     **********************************************************/
;;;27     void KEY_Init(void) //IO初始化
000000  b508              PUSH     {r3,lr}
;;;28     { 
;;;29      	GPIO_InitTypeDef GPIO_InitStructure;
;;;30     	
;;;31      	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);//使能PORTA,PORTE时钟
000002  2101              MOVS     r1,#1
000004  2004              MOVS     r0,#4
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;32     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO,ENABLE);	//使能复用功能时钟
00000a  2101              MOVS     r1,#1
00000c  4608              MOV      r0,r1
00000e  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;33     	
;;;34     	
;;;35     	GPIO_InitStructure.GPIO_Pin  = GPIO_Pin_4|GPIO_Pin_5|GPIO_Pin_6|GPIO_Pin_7;//KEY0-KEY2
000012  20f0              MOVS     r0,#0xf0
000014  f8ad0000          STRH     r0,[sp,#0]
;;;36     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD; //设置成下拉输入
000018  2028              MOVS     r0,#0x28
00001a  f88d0003          STRB     r0,[sp,#3]
;;;37      	GPIO_Init(GPIOA, &GPIO_InitStructure);//初始化GPIOA4,5,6,7
00001e  4669              MOV      r1,sp
000020  4801              LDR      r0,|L1.40|
000022  f7fffffe          BL       GPIO_Init
;;;38     	
;;;39     }
000026  bd08              POP      {r3,pc}
;;;40     /*********************************************************
                          ENDP

                  |L1.40|
                          DCD      0x40010800

                          AREA ||i.Key_task||, CODE, READONLY, ALIGN=1

                  Key_task PROC
;;;201    **********************************************************/
;;;202    void Key_task(void * pvParameters)
000000  e004              B        |L2.12|
                  |L2.2|
;;;203    {
;;;204    	while(1)
;;;205    	{ 
;;;206    		vTaskDelay(200);
000002  20c8              MOVS     r0,#0xc8
000004  f7fffffe          BL       vTaskDelay
;;;207        key_scan();
000008  f7fffffe          BL       key_scan
                  |L2.12|
00000c  e7f9              B        |L2.2|
;;;208     
;;;209    
;;;210    	}	 
;;;211    }
;;;212    
                          ENDP


                          AREA ||i.key_scan||, CODE, READONLY, ALIGN=2

                  key_scan PROC
;;;42     **********************************************************/
;;;43     void key_scan(void)
000000  b510              PUSH     {r4,lr}
;;;44     {
;;;45     		if((Set_key1==1) || (Add_key3==1)\
000002  2110              MOVS     r1,#0x10
000004  48fe              LDR      r0,|L3.1024|
000006  f7fffffe          BL       GPIO_ReadInputDataBit
00000a  2801              CMP      r0,#1
00000c  d011              BEQ      |L3.50|
00000e  2140              MOVS     r1,#0x40
000010  48fb              LDR      r0,|L3.1024|
000012  f7fffffe          BL       GPIO_ReadInputDataBit
000016  2801              CMP      r0,#1
000018  d00b              BEQ      |L3.50|
;;;46     			||(Down_key4==1) || (OK_key2==1))	 	 //设置按键
00001a  2180              MOVS     r1,#0x80
00001c  48f8              LDR      r0,|L3.1024|
00001e  f7fffffe          BL       GPIO_ReadInputDataBit
000022  2801              CMP      r0,#1
000024  d005              BEQ      |L3.50|
000026  2120              MOVS     r1,#0x20
000028  48f5              LDR      r0,|L3.1024|
00002a  f7fffffe          BL       GPIO_ReadInputDataBit
00002e  2801              CMP      r0,#1
000030  d17e              BNE      |L3.304|
                  |L3.50|
;;;47     		{		
;;;48     
;;;49     			delay_ms(10);//消抖
000032  200a              MOVS     r0,#0xa
000034  f7fffffe          BL       delay_ms
;;;50     			if(Set_key1==1)
000038  2110              MOVS     r1,#0x10
00003a  48f1              LDR      r0,|L3.1024|
00003c  f7fffffe          BL       GPIO_ReadInputDataBit
000040  2801              CMP      r0,#1
000042  d115              BNE      |L3.112|
;;;51     				{	
;;;52     				  show_Refresh = 0 ;
000044  2000              MOVS     r0,#0
000046  49ef              LDR      r1,|L3.1028|
000048  7008              STRB     r0,[r1,#0]
;;;53     					if(key_cnt.set >= 7){key_cnt.set = -1;}
00004a  48ef              LDR      r0,|L3.1032|
00004c  f9b00024          LDRSH    r0,[r0,#0x24]  ; key_cnt
000050  2807              CMP      r0,#7
000052  db03              BLT      |L3.92|
000054  f04f30ff          MOV      r0,#0xffffffff
000058  49eb              LDR      r1,|L3.1032|
00005a  8488              STRH     r0,[r1,#0x24]
                  |L3.92|
;;;54     					key_flag=key_yes;
00005c  2001              MOVS     r0,#1
00005e  49eb              LDR      r1,|L3.1036|
000060  7008              STRB     r0,[r1,#0]
;;;55     					key_cnt.set ++ ;
000062  48e9              LDR      r0,|L3.1032|
000064  8c80              LDRH     r0,[r0,#0x24]  ; key_cnt
000066  1c40              ADDS     r0,r0,#1
000068  b200              SXTH     r0,r0
00006a  49e7              LDR      r1,|L3.1032|
00006c  8488              STRH     r0,[r1,#0x24]
00006e  e1eb              B        |L3.1096|
                  |L3.112|
;;;56     				}
;;;57     						
;;;58     			else if(Add_key3==1) //增加按键
000070  2140              MOVS     r1,#0x40
000072  48e3              LDR      r0,|L3.1024|
000074  f7fffffe          BL       GPIO_ReadInputDataBit
000078  2801              CMP      r0,#1
00007a  d17d              BNE      |L3.376|
;;;59     			 {
;;;60     				 show_Refresh = 0 ;
00007c  2000              MOVS     r0,#0
00007e  49e1              LDR      r1,|L3.1028|
000080  7008              STRB     r0,[r1,#0]
;;;61     				 if(key_cnt.cnt >= 100){key_cnt.cnt = -1;}
000082  48e1              LDR      r0,|L3.1032|
000084  f9b00000          LDRSH    r0,[r0,#0]  ; key_cnt
000088  2864              CMP      r0,#0x64
00008a  db03              BLT      |L3.148|
00008c  f04f30ff          MOV      r0,#0xffffffff
000090  49dd              LDR      r1,|L3.1032|
000092  8008              STRH     r0,[r1,#0]
                  |L3.148|
;;;62     				 key_flag=key_yes;
000094  2001              MOVS     r0,#1
000096  49dd              LDR      r1,|L3.1036|
000098  7008              STRB     r0,[r1,#0]
;;;63     				 key_cnt.cnt ++ ;
00009a  48db              LDR      r0,|L3.1032|
00009c  8800              LDRH     r0,[r0,#0]  ; key_cnt
00009e  1c40              ADDS     r0,r0,#1
0000a0  b200              SXTH     r0,r0
0000a2  49d9              LDR      r1,|L3.1032|
0000a4  8008              STRH     r0,[r1,#0]
;;;64     				 if(key_cnt.set == 1)
0000a6  4608              MOV      r0,r1
0000a8  8c80              LDRH     r0,[r0,#0x24]  ; key_cnt
0000aa  2801              CMP      r0,#1
0000ac  d112              BNE      |L3.212|
;;;65     				{
;;;66     					key_cnt.plan.power_h = tmp_plan.power_h;
0000ae  48d8              LDR      r0,|L3.1040|
0000b0  8881              LDRH     r1,[r0,#4]  ; tmp_plan
0000b2  48d5              LDR      r0,|L3.1032|
0000b4  80c1              STRH     r1,[r0,#6]
;;;67     					if(key_cnt.plan.power_h >= 100){key_cnt.plan.power_h = 0 ;}
0000b6  88c0              LDRH     r0,[r0,#6]
0000b8  2864              CMP      r0,#0x64
0000ba  db02              BLT      |L3.194|
0000bc  2100              MOVS     r1,#0
0000be  48d2              LDR      r0,|L3.1032|
0000c0  80c1              STRH     r1,[r0,#6]
                  |L3.194|
;;;68     					key_cnt.plan.power_h  ++ ;
0000c2  48d1              LDR      r0,|L3.1032|
0000c4  88c0              LDRH     r0,[r0,#6]
0000c6  1c40              ADDS     r0,r0,#1
0000c8  b281              UXTH     r1,r0
0000ca  48cf              LDR      r0,|L3.1032|
0000cc  80c1              STRH     r1,[r0,#6]
;;;69     					tmp_plan.power_h =  key_cnt.plan.power_h;
0000ce  88c0              LDRH     r0,[r0,#6]
0000d0  49cf              LDR      r1,|L3.1040|
0000d2  8088              STRH     r0,[r1,#4]
                  |L3.212|
;;;70     				}
;;;71     				if(key_cnt.set == 2)
0000d4  48cc              LDR      r0,|L3.1032|
0000d6  8c80              LDRH     r0,[r0,#0x24]  ; key_cnt
0000d8  2802              CMP      r0,#2
0000da  d11c              BNE      |L3.278|
;;;72     				{
;;;73     					key_cnt.plan.power_l = tmp_plan.power_l/10;
0000dc  48cc              LDR      r0,|L3.1040|
0000de  88c0              LDRH     r0,[r0,#6]  ; tmp_plan
0000e0  210a              MOVS     r1,#0xa
0000e2  fb90f0f1          SDIV     r0,r0,r1
0000e6  b281              UXTH     r1,r0
0000e8  48c7              LDR      r0,|L3.1032|
0000ea  8101              STRH     r1,[r0,#8]
;;;74     					if(key_cnt.plan.power_l >= 100){key_cnt.plan.power_l = 0 ;}			
0000ec  8900              LDRH     r0,[r0,#8]
0000ee  2864              CMP      r0,#0x64
0000f0  db02              BLT      |L3.248|
0000f2  2100              MOVS     r1,#0
0000f4  48c4              LDR      r0,|L3.1032|
0000f6  8101              STRH     r1,[r0,#8]
                  |L3.248|
;;;75     					key_cnt.plan.power_l  ++ ;
0000f8  48c3              LDR      r0,|L3.1032|
0000fa  8900              LDRH     r0,[r0,#8]
0000fc  1c40              ADDS     r0,r0,#1
0000fe  b281              UXTH     r1,r0
000100  48c1              LDR      r0,|L3.1032|
000102  8101              STRH     r1,[r0,#8]
;;;76     					tmp_plan.power_l = key_cnt.plan.power_l*10 ;
000104  8900              LDRH     r0,[r0,#8]
000106  eb000080          ADD      r0,r0,r0,LSL #2
00010a  f64f71ff          MOV      r1,#0xffff
00010e  ea010040          AND      r0,r1,r0,LSL #1
000112  49bf              LDR      r1,|L3.1040|
000114  80c8              STRH     r0,[r1,#6]
                  |L3.278|
;;;77     				}
;;;78     				if(key_cnt.set == 5)
000116  48bc              LDR      r0,|L3.1032|
000118  8c80              LDRH     r0,[r0,#0x24]  ; key_cnt
00011a  2805              CMP      r0,#5
00011c  d114              BNE      |L3.328|
;;;79     				{
;;;80     				  key_cnt.time.time_h = tmp_tim.time_h ;
00011e  48bd              LDR      r0,|L3.1044|
000120  8881              LDRH     r1,[r0,#4]  ; tmp_tim
000122  48b9              LDR      r0,|L3.1032|
000124  8201              STRH     r1,[r0,#0x10]
;;;81     					if(key_cnt.time.time_h >= 24){key_cnt.time.time_h = 0 ;}
000126  8a00              LDRH     r0,[r0,#0x10]
000128  2818              CMP      r0,#0x18
00012a  db04              BLT      |L3.310|
00012c  2100              MOVS     r1,#0
00012e  e000              B        |L3.306|
                  |L3.304|
000130  e187              B        |L3.1090|
                  |L3.306|
000132  48b5              LDR      r0,|L3.1032|
000134  8201              STRH     r1,[r0,#0x10]
                  |L3.310|
;;;82     					key_cnt.time.time_h ++ ;
000136  48b4              LDR      r0,|L3.1032|
000138  8a00              LDRH     r0,[r0,#0x10]
00013a  1c40              ADDS     r0,r0,#1
00013c  b281              UXTH     r1,r0
00013e  48b2              LDR      r0,|L3.1032|
000140  8201              STRH     r1,[r0,#0x10]
;;;83     					tmp_tim.time_h = key_cnt.time.time_h ;
000142  8a00              LDRH     r0,[r0,#0x10]
000144  49b3              LDR      r1,|L3.1044|
000146  8088              STRH     r0,[r1,#4]
                  |L3.328|
;;;84     				}
;;;85     				if(key_cnt.set == 6)
000148  48af              LDR      r0,|L3.1032|
00014a  8c80              LDRH     r0,[r0,#0x24]  ; key_cnt
00014c  2806              CMP      r0,#6
00014e  d112              BNE      |L3.374|
;;;86     				{
;;;87     				  key_cnt.time.time_m = tmp_tim.time_m ;
000150  48b0              LDR      r0,|L3.1044|
000152  88c1              LDRH     r1,[r0,#6]  ; tmp_tim
000154  48ac              LDR      r0,|L3.1032|
000156  8241              STRH     r1,[r0,#0x12]
;;;88     					if(key_cnt.time.time_m >= 60){key_cnt.time.time_m = 0 ;}
000158  8a40              LDRH     r0,[r0,#0x12]
00015a  283c              CMP      r0,#0x3c
00015c  db02              BLT      |L3.356|
00015e  2100              MOVS     r1,#0
000160  48a9              LDR      r0,|L3.1032|
000162  8241              STRH     r1,[r0,#0x12]
                  |L3.356|
;;;89     					key_cnt.time.time_m ++ ;
000164  48a8              LDR      r0,|L3.1032|
000166  8a40              LDRH     r0,[r0,#0x12]
000168  1c40              ADDS     r0,r0,#1
00016a  b281              UXTH     r1,r0
00016c  48a6              LDR      r0,|L3.1032|
00016e  8241              STRH     r1,[r0,#0x12]
;;;90     					tmp_tim.time_m = key_cnt.time.time_m ;
000170  8a40              LDRH     r0,[r0,#0x12]
000172  49a8              LDR      r1,|L3.1044|
000174  80c8              STRH     r0,[r1,#6]
                  |L3.374|
;;;91     				}
;;;92     				if(key_cnt.set == 7)
000176  e000              B        |L3.378|
                  |L3.376|
000178  e045              B        |L3.518|
                  |L3.378|
00017a  48a3              LDR      r0,|L3.1032|
00017c  8c80              LDRH     r0,[r0,#0x24]  ; key_cnt
00017e  2807              CMP      r0,#7
000180  d112              BNE      |L3.424|
;;;93     				{
;;;94     				  key_cnt.time.time_s = tmp_tim.time_s ;
000182  48a4              LDR      r0,|L3.1044|
000184  8901              LDRH     r1,[r0,#8]  ; tmp_tim
000186  48a0              LDR      r0,|L3.1032|
000188  8281              STRH     r1,[r0,#0x14]
;;;95     					if(key_cnt.time.time_s >= 60){key_cnt.time.time_s = 0 ;}
00018a  8a80              LDRH     r0,[r0,#0x14]
00018c  283c              CMP      r0,#0x3c
00018e  db02              BLT      |L3.406|
000190  2100              MOVS     r1,#0
000192  489d              LDR      r0,|L3.1032|
000194  8281              STRH     r1,[r0,#0x14]
                  |L3.406|
;;;96     					key_cnt.time.time_s ++ ;
000196  489c              LDR      r0,|L3.1032|
000198  8a80              LDRH     r0,[r0,#0x14]
00019a  1c40              ADDS     r0,r0,#1
00019c  b281              UXTH     r1,r0
00019e  489a              LDR      r0,|L3.1032|
0001a0  8281              STRH     r1,[r0,#0x14]
;;;97     					tmp_tim.time_s =  key_cnt.time.time_s;
0001a2  8a80              LDRH     r0,[r0,#0x14]
0001a4  499b              LDR      r1,|L3.1044|
0001a6  8108              STRH     r0,[r1,#8]
                  |L3.424|
;;;98     				}
;;;99     				if(key_cnt.set == 3)
0001a8  4897              LDR      r0,|L3.1032|
0001aa  8c80              LDRH     r0,[r0,#0x24]  ; key_cnt
0001ac  2803              CMP      r0,#3
0001ae  d112              BNE      |L3.470|
;;;100    				{
;;;101    					key_cnt.timeing.time_h = timeing_tmp.time_h  ;
0001b0  4899              LDR      r0,|L3.1048|
0001b2  8881              LDRH     r1,[r0,#4]  ; timeing_tmp
0001b4  4894              LDR      r0,|L3.1032|
0001b6  8381              STRH     r1,[r0,#0x1c]
;;;102    					if(key_cnt.timeing.time_h >= 24){key_cnt.timeing.time_h = 0 ;}
0001b8  8b80              LDRH     r0,[r0,#0x1c]
0001ba  2818              CMP      r0,#0x18
0001bc  db02              BLT      |L3.452|
0001be  2100              MOVS     r1,#0
0001c0  4891              LDR      r0,|L3.1032|
0001c2  8381              STRH     r1,[r0,#0x1c]
                  |L3.452|
;;;103    					key_cnt.timeing.time_h ++ ;
0001c4  4890              LDR      r0,|L3.1032|
0001c6  8b80              LDRH     r0,[r0,#0x1c]
0001c8  1c40              ADDS     r0,r0,#1
0001ca  b281              UXTH     r1,r0
0001cc  488e              LDR      r0,|L3.1032|
0001ce  8381              STRH     r1,[r0,#0x1c]
;;;104    					timeing_tmp.time_h  = key_cnt.timeing.time_h ;
0001d0  8b80              LDRH     r0,[r0,#0x1c]
0001d2  4991              LDR      r1,|L3.1048|
0001d4  8088              STRH     r0,[r1,#4]
                  |L3.470|
;;;105    				}
;;;106    				if(key_cnt.set == 4)
0001d6  488c              LDR      r0,|L3.1032|
0001d8  8c80              LDRH     r0,[r0,#0x24]  ; key_cnt
0001da  2804              CMP      r0,#4
0001dc  d112              BNE      |L3.516|
;;;107    				{
;;;108    					key_cnt.timeing.time_m = timeing_tmp.time_m  ;
0001de  488e              LDR      r0,|L3.1048|
0001e0  88c1              LDRH     r1,[r0,#6]  ; timeing_tmp
0001e2  4889              LDR      r0,|L3.1032|
0001e4  83c1              STRH     r1,[r0,#0x1e]
;;;109    					if(key_cnt.timeing.time_m >= 60){key_cnt.timeing.time_m = 0 ;}
0001e6  8bc0              LDRH     r0,[r0,#0x1e]
0001e8  283c              CMP      r0,#0x3c
0001ea  db02              BLT      |L3.498|
0001ec  2100              MOVS     r1,#0
0001ee  4886              LDR      r0,|L3.1032|
0001f0  83c1              STRH     r1,[r0,#0x1e]
                  |L3.498|
;;;110    					key_cnt.timeing.time_m ++ ;
0001f2  4885              LDR      r0,|L3.1032|
0001f4  8bc0              LDRH     r0,[r0,#0x1e]
0001f6  1c40              ADDS     r0,r0,#1
0001f8  b281              UXTH     r1,r0
0001fa  4883              LDR      r0,|L3.1032|
0001fc  83c1              STRH     r1,[r0,#0x1e]
;;;111    					timeing_tmp.time_m  = key_cnt.timeing.time_m ;
0001fe  8bc0              LDRH     r0,[r0,#0x1e]
000200  4985              LDR      r1,|L3.1048|
000202  80c8              STRH     r0,[r1,#6]
                  |L3.516|
000204  e120              B        |L3.1096|
                  |L3.518|
;;;112    				}
;;;113    
;;;114    			 } 
;;;115    			else if(Down_key4==1) //减少按键
000206  2180              MOVS     r1,#0x80
000208  487d              LDR      r0,|L3.1024|
00020a  f7fffffe          BL       GPIO_ReadInputDataBit
00020e  2801              CMP      r0,#1
000210  d17e              BNE      |L3.784|
;;;116    			 {
;;;117    				show_Refresh = 0 ;
000212  2000              MOVS     r0,#0
000214  497b              LDR      r1,|L3.1028|
000216  7008              STRB     r0,[r1,#0]
;;;118    				if(key_cnt.cnt <= 0){key_cnt.cnt = 100;}
000218  487b              LDR      r0,|L3.1032|
00021a  f9b00000          LDRSH    r0,[r0,#0]  ; key_cnt
00021e  2800              CMP      r0,#0
000220  dc02              BGT      |L3.552|
000222  2064              MOVS     r0,#0x64
000224  4978              LDR      r1,|L3.1032|
000226  8008              STRH     r0,[r1,#0]
                  |L3.552|
;;;119    				key_flag=key_yes;
000228  2001              MOVS     r0,#1
00022a  4978              LDR      r1,|L3.1036|
00022c  7008              STRB     r0,[r1,#0]
;;;120    				key_cnt.cnt -- ;
00022e  4876              LDR      r0,|L3.1032|
000230  8800              LDRH     r0,[r0,#0]  ; key_cnt
000232  1e40              SUBS     r0,r0,#1
000234  b200              SXTH     r0,r0
000236  4974              LDR      r1,|L3.1032|
000238  8008              STRH     r0,[r1,#0]
;;;121    				
;;;122    				if(key_cnt.set == 1)
00023a  4608              MOV      r0,r1
00023c  8c80              LDRH     r0,[r0,#0x24]  ; key_cnt
00023e  2801              CMP      r0,#1
000240  d112              BNE      |L3.616|
;;;123    				{
;;;124    				  key_cnt.plan.power_h = tmp_plan.power_h ;
000242  4873              LDR      r0,|L3.1040|
000244  8881              LDRH     r1,[r0,#4]  ; tmp_plan
000246  4870              LDR      r0,|L3.1032|
000248  80c1              STRH     r1,[r0,#6]
;;;125    					if(key_cnt.plan.power_h <= 0){key_cnt.plan.power_h = 100 ;}
00024a  88c0              LDRH     r0,[r0,#6]
00024c  2800              CMP      r0,#0
00024e  dc02              BGT      |L3.598|
000250  2164              MOVS     r1,#0x64
000252  486d              LDR      r0,|L3.1032|
000254  80c1              STRH     r1,[r0,#6]
                  |L3.598|
;;;126    					key_cnt.plan.power_h  -- ;
000256  486c              LDR      r0,|L3.1032|
000258  88c0              LDRH     r0,[r0,#6]
00025a  1e40              SUBS     r0,r0,#1
00025c  b281              UXTH     r1,r0
00025e  486a              LDR      r0,|L3.1032|
000260  80c1              STRH     r1,[r0,#6]
;;;127    					tmp_plan.power_h  = key_cnt.plan.power_h ;
000262  88c0              LDRH     r0,[r0,#6]
000264  496a              LDR      r1,|L3.1040|
000266  8088              STRH     r0,[r1,#4]
                  |L3.616|
;;;128    				}
;;;129    				if(key_cnt.set == 2)
000268  4867              LDR      r0,|L3.1032|
00026a  8c80              LDRH     r0,[r0,#0x24]  ; key_cnt
00026c  2802              CMP      r0,#2
00026e  d11c              BNE      |L3.682|
;;;130    				{
;;;131    					key_cnt.plan.power_l = tmp_plan.power_l/10 ;
000270  4867              LDR      r0,|L3.1040|
000272  88c0              LDRH     r0,[r0,#6]  ; tmp_plan
000274  210a              MOVS     r1,#0xa
000276  fb90f0f1          SDIV     r0,r0,r1
00027a  b281              UXTH     r1,r0
00027c  4862              LDR      r0,|L3.1032|
00027e  8101              STRH     r1,[r0,#8]
;;;132    					if(key_cnt.plan.power_l <= 0){key_cnt.plan.power_l = 100 ;}			
000280  8900              LDRH     r0,[r0,#8]
000282  2800              CMP      r0,#0
000284  dc02              BGT      |L3.652|
000286  2164              MOVS     r1,#0x64
000288  485f              LDR      r0,|L3.1032|
00028a  8101              STRH     r1,[r0,#8]
                  |L3.652|
;;;133    					key_cnt.plan.power_l  -- ;
00028c  485e              LDR      r0,|L3.1032|
00028e  8900              LDRH     r0,[r0,#8]
000290  1e40              SUBS     r0,r0,#1
000292  b281              UXTH     r1,r0
000294  485c              LDR      r0,|L3.1032|
000296  8101              STRH     r1,[r0,#8]
;;;134    					tmp_plan.power_l = key_cnt.plan.power_l*10 ;
000298  8900              LDRH     r0,[r0,#8]
00029a  eb000080          ADD      r0,r0,r0,LSL #2
00029e  f64f71ff          MOV      r1,#0xffff
0002a2  ea010040          AND      r0,r1,r0,LSL #1
0002a6  495a              LDR      r1,|L3.1040|
0002a8  80c8              STRH     r0,[r1,#6]
                  |L3.682|
;;;135    				}
;;;136    				if(key_cnt.set == 5)
0002aa  4857              LDR      r0,|L3.1032|
0002ac  8c80              LDRH     r0,[r0,#0x24]  ; key_cnt
0002ae  2805              CMP      r0,#5
0002b0  d112              BNE      |L3.728|
;;;137    				{
;;;138    					key_cnt.time.time_h = tmp_tim.time_h ;
0002b2  4858              LDR      r0,|L3.1044|
0002b4  8881              LDRH     r1,[r0,#4]  ; tmp_tim
0002b6  4854              LDR      r0,|L3.1032|
0002b8  8201              STRH     r1,[r0,#0x10]
;;;139    					if(key_cnt.time.time_h <= 0){key_cnt.time.time_h = 24 ;}
0002ba  8a00              LDRH     r0,[r0,#0x10]
0002bc  2800              CMP      r0,#0
0002be  dc02              BGT      |L3.710|
0002c0  2118              MOVS     r1,#0x18
0002c2  4851              LDR      r0,|L3.1032|
0002c4  8201              STRH     r1,[r0,#0x10]
                  |L3.710|
;;;140    					key_cnt.time.time_h -- ;
0002c6  4850              LDR      r0,|L3.1032|
0002c8  8a00              LDRH     r0,[r0,#0x10]
0002ca  1e40              SUBS     r0,r0,#1
0002cc  b281              UXTH     r1,r0
0002ce  484e              LDR      r0,|L3.1032|
0002d0  8201              STRH     r1,[r0,#0x10]
;;;141    					tmp_tim.time_h = key_cnt.time.time_h ;
0002d2  8a00              LDRH     r0,[r0,#0x10]
0002d4  494f              LDR      r1,|L3.1044|
0002d6  8088              STRH     r0,[r1,#4]
                  |L3.728|
;;;142    				}
;;;143    				if(key_cnt.set == 6)
0002d8  484b              LDR      r0,|L3.1032|
0002da  8c80              LDRH     r0,[r0,#0x24]  ; key_cnt
0002dc  2806              CMP      r0,#6
0002de  d112              BNE      |L3.774|
;;;144    				{
;;;145    					key_cnt.time.time_m = tmp_tim.time_m ;
0002e0  484c              LDR      r0,|L3.1044|
0002e2  88c1              LDRH     r1,[r0,#6]  ; tmp_tim
0002e4  4848              LDR      r0,|L3.1032|
0002e6  8241              STRH     r1,[r0,#0x12]
;;;146    					if(key_cnt.time.time_m <= 0){key_cnt.time.time_m = 60 ;}
0002e8  8a40              LDRH     r0,[r0,#0x12]
0002ea  2800              CMP      r0,#0
0002ec  dc02              BGT      |L3.756|
0002ee  213c              MOVS     r1,#0x3c
0002f0  4845              LDR      r0,|L3.1032|
0002f2  8241              STRH     r1,[r0,#0x12]
                  |L3.756|
;;;147    					key_cnt.time.time_m -- ;
0002f4  4844              LDR      r0,|L3.1032|
0002f6  8a40              LDRH     r0,[r0,#0x12]
0002f8  1e40              SUBS     r0,r0,#1
0002fa  b281              UXTH     r1,r0
0002fc  4842              LDR      r0,|L3.1032|
0002fe  8241              STRH     r1,[r0,#0x12]
;;;148    					tmp_tim.time_m = key_cnt.time.time_m ;
000300  8a40              LDRH     r0,[r0,#0x12]
000302  4944              LDR      r1,|L3.1044|
000304  80c8              STRH     r0,[r1,#6]
                  |L3.774|
;;;149    				}
;;;150    				if(key_cnt.set == 7)
000306  4840              LDR      r0,|L3.1032|
000308  8c80              LDRH     r0,[r0,#0x24]  ; key_cnt
00030a  2807              CMP      r0,#7
00030c  d114              BNE      |L3.824|
;;;151    				{
;;;152    					key_cnt.time.time_s = tmp_tim.time_s ;
00030e  e000              B        |L3.786|
                  |L3.784|
000310  e041              B        |L3.918|
                  |L3.786|
000312  4840              LDR      r0,|L3.1044|
000314  8901              LDRH     r1,[r0,#8]  ; tmp_tim
000316  483c              LDR      r0,|L3.1032|
000318  8281              STRH     r1,[r0,#0x14]
;;;153    					if(key_cnt.time.time_s <= 0){key_cnt.time.time_s = 60 ;}
00031a  8a80              LDRH     r0,[r0,#0x14]
00031c  2800              CMP      r0,#0
00031e  dc02              BGT      |L3.806|
000320  213c              MOVS     r1,#0x3c
000322  4839              LDR      r0,|L3.1032|
000324  8281              STRH     r1,[r0,#0x14]
                  |L3.806|
;;;154    					key_cnt.time.time_s -- ;
000326  4838              LDR      r0,|L3.1032|
000328  8a80              LDRH     r0,[r0,#0x14]
00032a  1e40              SUBS     r0,r0,#1
00032c  b281              UXTH     r1,r0
00032e  4836              LDR      r0,|L3.1032|
000330  8281              STRH     r1,[r0,#0x14]
;;;155    					tmp_tim.time_s = key_cnt.time.time_s ;
000332  8a80              LDRH     r0,[r0,#0x14]
000334  4937              LDR      r1,|L3.1044|
000336  8108              STRH     r0,[r1,#8]
                  |L3.824|
;;;156    				}
;;;157    				
;;;158    				if(key_cnt.set == 3)
000338  4833              LDR      r0,|L3.1032|
00033a  8c80              LDRH     r0,[r0,#0x24]  ; key_cnt
00033c  2803              CMP      r0,#3
00033e  d112              BNE      |L3.870|
;;;159    				{
;;;160    					key_cnt.timeing.time_h = timeing_tmp.time_h  ;
000340  4835              LDR      r0,|L3.1048|
000342  8881              LDRH     r1,[r0,#4]  ; timeing_tmp
000344  4830              LDR      r0,|L3.1032|
000346  8381              STRH     r1,[r0,#0x1c]
;;;161    					if(key_cnt.timeing.time_h <= 0){key_cnt.timeing.time_h = 24 ;}
000348  8b80              LDRH     r0,[r0,#0x1c]
00034a  2800              CMP      r0,#0
00034c  dc02              BGT      |L3.852|
00034e  2118              MOVS     r1,#0x18
000350  482d              LDR      r0,|L3.1032|
000352  8381              STRH     r1,[r0,#0x1c]
                  |L3.852|
;;;162    					key_cnt.timeing.time_h -- ;
000354  482c              LDR      r0,|L3.1032|
000356  8b80              LDRH     r0,[r0,#0x1c]
000358  1e40              SUBS     r0,r0,#1
00035a  b281              UXTH     r1,r0
00035c  482a              LDR      r0,|L3.1032|
00035e  8381              STRH     r1,[r0,#0x1c]
;;;163    					timeing_tmp.time_h  = key_cnt.timeing.time_h ;
000360  8b80              LDRH     r0,[r0,#0x1c]
000362  492d              LDR      r1,|L3.1048|
000364  8088              STRH     r0,[r1,#4]
                  |L3.870|
;;;164    				}
;;;165    				if(key_cnt.set == 4)
000366  4828              LDR      r0,|L3.1032|
000368  8c80              LDRH     r0,[r0,#0x24]  ; key_cnt
00036a  2804              CMP      r0,#4
00036c  d16c              BNE      |L3.1096|
;;;166    				{
;;;167    					key_cnt.timeing.time_m = timeing_tmp.time_m  ;
00036e  482a              LDR      r0,|L3.1048|
000370  88c1              LDRH     r1,[r0,#6]  ; timeing_tmp
000372  4825              LDR      r0,|L3.1032|
000374  83c1              STRH     r1,[r0,#0x1e]
;;;168    					if(key_cnt.timeing.time_m <= 0){key_cnt.timeing.time_m = 60 ;}
000376  8bc0              LDRH     r0,[r0,#0x1e]
000378  2800              CMP      r0,#0
00037a  dc02              BGT      |L3.898|
00037c  213c              MOVS     r1,#0x3c
00037e  4822              LDR      r0,|L3.1032|
000380  83c1              STRH     r1,[r0,#0x1e]
                  |L3.898|
;;;169    					key_cnt.timeing.time_m -- ;
000382  4821              LDR      r0,|L3.1032|
000384  8bc0              LDRH     r0,[r0,#0x1e]
000386  1e40              SUBS     r0,r0,#1
000388  b281              UXTH     r1,r0
00038a  481f              LDR      r0,|L3.1032|
00038c  83c1              STRH     r1,[r0,#0x1e]
;;;170    					timeing_tmp.time_m  = key_cnt.timeing.time_m ;
00038e  8bc0              LDRH     r0,[r0,#0x1e]
000390  4921              LDR      r1,|L3.1048|
000392  80c8              STRH     r0,[r1,#6]
000394  e058              B        |L3.1096|
                  |L3.918|
;;;171    				}
;;;172    
;;;173    			 }
;;;174    			else if(OK_key2==1) //确认按键
000396  2120              MOVS     r1,#0x20
000398  4819              LDR      r0,|L3.1024|
00039a  f7fffffe          BL       GPIO_ReadInputDataBit
00039e  2801              CMP      r0,#1
0003a0  d152              BNE      |L3.1096|
;;;175    			 { 
;;;176    					key_flag = key_yes;
0003a2  491a              LDR      r1,|L3.1036|
0003a4  7008              STRB     r0,[r1,#0]
;;;177    					key_cnt.ok = OK_key2 ;	
0003a6  2120              MOVS     r1,#0x20
0003a8  4815              LDR      r0,|L3.1024|
0003aa  f7fffffe          BL       GPIO_ReadInputDataBit
0003ae  4916              LDR      r1,|L3.1032|
0003b0  84c8              STRH     r0,[r1,#0x26]
;;;178    					
;;;179    					plan.power_h = tmp_plan.power_h ;
0003b2  4817              LDR      r0,|L3.1040|
0003b4  8880              LDRH     r0,[r0,#4]  ; tmp_plan
0003b6  4919              LDR      r1,|L3.1052|
0003b8  8088              STRH     r0,[r1,#4]
;;;180    					plan.power_l = tmp_plan.power_l ;
0003ba  4815              LDR      r0,|L3.1040|
0003bc  88c0              LDRH     r0,[r0,#6]  ; tmp_plan
0003be  80c8              STRH     r0,[r1,#6]
;;;181    					plan.amp = plan.power_h*1000 + plan.power_l ;
0003c0  4608              MOV      r0,r1
0003c2  88c0              LDRH     r0,[r0,#6]  ; plan
0003c4  8889              LDRH     r1,[r1,#4]  ; plan
0003c6  eb010241          ADD      r2,r1,r1,LSL #1
0003ca  ebc211c1          RSB      r1,r2,r1,LSL #7
0003ce  eb0000c1          ADD      r0,r0,r1,LSL #3
0003d2  4912              LDR      r1,|L3.1052|
0003d4  8048              STRH     r0,[r1,#2]
;;;182    					
;;;183    					timeing.time_h = timeing_tmp.time_h ;
0003d6  4810              LDR      r0,|L3.1048|
0003d8  8880              LDRH     r0,[r0,#4]  ; timeing_tmp
0003da  4911              LDR      r1,|L3.1056|
0003dc  8088              STRH     r0,[r1,#4]
;;;184    					timeing.time_m = timeing_tmp.time_m ;
0003de  480e              LDR      r0,|L3.1048|
0003e0  88c0              LDRH     r0,[r0,#6]  ; timeing_tmp
0003e2  80c8              STRH     r0,[r1,#6]
;;;185    					timeing.time_s = timeing_tmp.time_s ;		
0003e4  480c              LDR      r0,|L3.1048|
0003e6  8900              LDRH     r0,[r0,#8]  ; timeing_tmp
0003e8  8108              STRH     r0,[r1,#8]
;;;186    					timeing.time_amp = timeing.time_h *100*100 \
0003ea  4608              MOV      r0,r1
0003ec  8880              LDRH     r0,[r0,#4]  ; timeing
0003ee  2164              MOVS     r1,#0x64
0003f0  4348              MULS     r0,r1,r0
0003f2  4348              MULS     r0,r1,r0
0003f4  490a              LDR      r1,|L3.1056|
0003f6  88c9              LDRH     r1,[r1,#6]  ; timeing
0003f8  eb0102c1          ADD      r2,r1,r1,LSL #3
0003fc  e012              B        |L3.1060|
0003fe  0000              DCW      0x0000
                  |L3.1024|
                          DCD      0x40010800
                  |L3.1028|
                          DCD      show_Refresh
                  |L3.1032|
                          DCD      key_cnt
                  |L3.1036|
                          DCD      key_flag
                  |L3.1040|
                          DCD      tmp_plan
                  |L3.1044|
                          DCD      tmp_tim
                  |L3.1048|
                          DCD      timeing_tmp
                  |L3.1052|
                          DCD      plan
                  |L3.1056|
                          DCD      timeing
                  |L3.1060|
000424  eb021101          ADD      r1,r2,r1,LSL #4
000428  eb000081          ADD      r0,r0,r1,LSL #2
00042c  4908              LDR      r1,|L3.1104|
00042e  8909              LDRH     r1,[r1,#8]  ; timeing
000430  4408              ADD      r0,r0,r1
000432  4907              LDR      r1,|L3.1104|
000434  6008              STR      r0,[r1,#0]  ; timeing
;;;187    						+timeing.time_m*100+timeing.time_s ; ;
;;;188    					
;;;189    					show_Refresh = 1 ;
000436  2001              MOVS     r0,#1
000438  4906              LDR      r1,|L3.1108|
00043a  7008              STRB     r0,[r1,#0]
;;;190    					clear_cursor(); 					
00043c  f7fffffe          BL       clear_cursor
000440  e002              B        |L3.1096|
                  |L3.1090|
;;;191    				}
;;;192    			 
;;;193    			}
;;;194    		 else 
;;;195    		 {key_flag = key_no;}
000442  2000              MOVS     r0,#0
000444  4904              LDR      r1,|L3.1112|
000446  7008              STRB     r0,[r1,#0]
                  |L3.1096|
;;;196    	 cursor();
000448  f7fffffe          BL       cursor
;;;197    }
00044c  bd10              POP      {r4,pc}
;;;198    /*********************************************************
                          ENDP

00044e  0000              DCW      0x0000
                  |L3.1104|
                          DCD      timeing
                  |L3.1108|
                          DCD      show_Refresh
                  |L3.1112|
                          DCD      key_flag

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  key_cnt
                          %        40

                          AREA ||.data||, DATA, ALIGN=2

                  key
000000  00                DCB      0x00
                  key_flag
000001  00                DCB      0x00
                  Set_key_state
000002  0000              DCB      0x00,0x00
                  KeyTask_Handler
                          DCD      0x00000000
